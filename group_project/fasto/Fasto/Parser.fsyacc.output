        Output file describing compiled parser placed in Parser.fs and Parser.fsi
------------------------
states = 
state 0:  items:    _startProg ->  . Prog
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   shift 4
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Prog: 1
    goto FunDecs: 2
state 1:  items:    _startProg -> Prog . 
  actions:    action 'TRUE' (noprec):   accept
    action 'FALSE' (noprec):   accept
    action 'NEG' (noprec):   accept
    action 'NOT' (noprec):   accept
    action 'AND' (noprec):   accept
    action 'OR' (noprec):   accept
    action 'MUL' (noprec):   accept
    action 'DIV' (noprec):   accept
    action 'LPAR' (noprec):   accept
    action 'RPAR' (noprec):   accept
    action 'LBRACKET' (noprec):   accept
    action 'RBRACKET' (noprec):   accept
    action 'LCURLY' (noprec):   accept
    action 'RCURLY' (noprec):   accept
    action 'FUN' (noprec):   accept
    action 'FN' (noprec):   accept
    action 'COMMA' (noprec):   accept
    action 'SEMICOLON' (noprec):   accept
    action 'READ' (noprec):   accept
    action 'WRITE' (noprec):   accept
    action 'DEQ' (noprec):   accept
    action 'LTH' (noprec):   accept
    action 'EQ' (noprec):   accept
    action 'MAP' (noprec):   accept
    action 'REDUCE' (noprec):   accept
    action 'IOTA' (noprec):   accept
    action 'ARROW' (noprec):   accept
    action 'REPLICATE' (noprec):   accept
    action 'SCAN' (noprec):   accept
    action 'FILTER' (noprec):   accept
    action 'PLUS' (noprec):   accept
    action 'MINUS' (noprec):   accept
    action 'LESS' (noprec):   accept
    action 'INT' (noprec):   accept
    action 'CHAR' (noprec):   accept
    action 'BOOL' (noprec):   accept
    action 'IF' (noprec):   accept
    action 'THEN' (noprec):   accept
    action 'ELSE' (noprec):   accept
    action 'LET' (noprec):   accept
    action 'IN' (noprec):   accept
    action 'EOF' (noprec):   accept
    action 'ID' (noprec):   accept
    action 'STRINGLIT' (noprec):   accept
    action 'CHARLIT' (noprec):   accept
    action 'NUM' (noprec):   accept
    action 'error' (noprec):   accept
    action '#' (noprec):   accept
    action '$$' (noprec):   accept
  immediate action:   accept  gotos:state 2:  items:    Prog -> FunDecs . 'EOF'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   shift 3
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 3:  items:    Prog -> FunDecs 'EOF' . 
  actions:    action 'TRUE' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'FALSE' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'NEG' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'NOT' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'AND' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'OR' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'MUL' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'DIV' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'LPAR' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'RPAR' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'LBRACKET' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'RBRACKET' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'LCURLY' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'RCURLY' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'FUN' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'FN' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'COMMA' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'SEMICOLON' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'READ' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'WRITE' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'DEQ' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'LTH' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'EQ' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'MAP' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'REDUCE' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'IOTA' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'ARROW' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'REPLICATE' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'SCAN' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'FILTER' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'PLUS' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'MINUS' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'LESS' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'INT' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'CHAR' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'BOOL' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'IF' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'THEN' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'ELSE' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'LET' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'IN' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'EOF' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'ID' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'STRINGLIT' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'CHARLIT' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'NUM' (noprec):   reduce Prog --> FunDecs 'EOF'
    action 'error' (noprec):   reduce Prog --> FunDecs 'EOF'
    action '#' (noprec):   reduce Prog --> FunDecs 'EOF'
    action '$$' (noprec):   reduce Prog --> FunDecs 'EOF'
  immediate action:   reduce Prog --> FunDecs 'EOF'  gotos:state 4:  items:    FunDecs -> 'FUN' . Fun FunDecs
    FunDecs -> 'FUN' . Fun
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (explicit left 9998):   shift 20
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   shift 17
    action 'CHAR' (noprec):   shift 18
    action 'BOOL' (noprec):   shift 19
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Fun: 5
    goto Type: 7
state 5:  items:    FunDecs -> 'FUN' Fun . FunDecs
    FunDecs -> 'FUN' Fun . 
  actions:    action 'TRUE' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'FALSE' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'NEG' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'NOT' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'AND' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'OR' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'MUL' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'DIV' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'LPAR' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'RPAR' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'LBRACKET' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'RBRACKET' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'LCURLY' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'RCURLY' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'FUN' (noprec):   shift 4
    action 'FN' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'COMMA' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'SEMICOLON' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'READ' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'WRITE' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'DEQ' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'LTH' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'EQ' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'MAP' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'REDUCE' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'IOTA' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'ARROW' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'REPLICATE' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'SCAN' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'FILTER' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'PLUS' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'MINUS' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'LESS' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'INT' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'CHAR' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'BOOL' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'IF' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'THEN' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'ELSE' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'LET' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'IN' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'EOF' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'ID' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'STRINGLIT' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'CHARLIT' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'NUM' (noprec):   reduce FunDecs --> 'FUN' Fun
    action 'error' (noprec):   reduce FunDecs --> 'FUN' Fun
    action '#' (noprec):   reduce FunDecs --> 'FUN' Fun
    action '$$' (noprec):   reduce FunDecs --> 'FUN' Fun
  immediate action: <none>  gotos:    goto FunDecs: 6
state 6:  items:    FunDecs -> 'FUN' Fun FunDecs . 
  actions:    action 'TRUE' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'FALSE' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'NEG' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'NOT' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'AND' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'OR' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'MUL' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'DIV' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'LPAR' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'RPAR' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'LBRACKET' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'RBRACKET' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'LCURLY' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'RCURLY' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'FUN' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'FN' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'COMMA' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'SEMICOLON' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'READ' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'WRITE' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'DEQ' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'LTH' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'EQ' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'MAP' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'REDUCE' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'IOTA' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'ARROW' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'REPLICATE' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'SCAN' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'FILTER' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'PLUS' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'MINUS' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'LESS' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'INT' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'CHAR' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'BOOL' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'IF' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'THEN' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'ELSE' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'LET' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'IN' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'EOF' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'ID' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'STRINGLIT' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'CHARLIT' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'NUM' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action 'error' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action '#' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
    action '$$' (noprec):   reduce FunDecs --> 'FUN' Fun FunDecs
  immediate action:   reduce FunDecs --> 'FUN' Fun FunDecs  gotos:state 7:  items:    Fun -> Type . 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    Fun -> Type . 'ID' 'LPAR' 'RPAR' 'EQ' Exp
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 8
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 8:  items:    Fun -> Type 'ID' . 'LPAR' Params 'RPAR' 'EQ' Exp
    Fun -> Type 'ID' . 'LPAR' 'RPAR' 'EQ' Exp
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 9
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 9:  items:    Fun -> Type 'ID' 'LPAR' . Params 'RPAR' 'EQ' Exp
    Fun -> Type 'ID' 'LPAR' . 'RPAR' 'EQ' Exp
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   shift 14
    action 'LBRACKET' (explicit left 9998):   shift 20
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   shift 17
    action 'CHAR' (noprec):   shift 18
    action 'BOOL' (noprec):   shift 19
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Type: 23
    goto Params: 10
state 10:  items:    Fun -> Type 'ID' 'LPAR' Params . 'RPAR' 'EQ' Exp
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   shift 11
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 11:  items:    Fun -> Type 'ID' 'LPAR' Params 'RPAR' . 'EQ' Exp
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (explicit left 9990):   shift 12
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 12:  items:    Fun -> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' . Exp
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 13
state 13:  items:    Fun -> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp . 
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'DEQ' Exp
    Exp -> Exp . 'LTH' Exp
    Exp -> Exp . 'MUL' Exp
    Exp -> Exp . 'DIV' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'OR' Exp
  actions:    action 'TRUE' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'FALSE' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'NEG' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'NOT' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'AND' (explicit left 9987):   shift 75
    action 'OR' (explicit left 9986):   shift 76
    action 'MUL' (explicit left 9993):   shift 71
    action 'DIV' (explicit left 9993):   shift 72
    action 'LPAR' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'RPAR' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'LBRACKET' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'RBRACKET' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'LCURLY' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'RCURLY' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'FUN' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'FN' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'COMMA' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'SEMICOLON' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'READ' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'WRITE' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'DEQ' (explicit left 9990):   shift 69
    action 'LTH' (explicit left 9990):   shift 70
    action 'EQ' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'MAP' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'REDUCE' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'IOTA' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'ARROW' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'REPLICATE' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'SCAN' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'FILTER' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'PLUS' (explicit left 9991):   shift 67
    action 'MINUS' (explicit left 9991):   shift 68
    action 'LESS' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'INT' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'CHAR' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'BOOL' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'IF' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'THEN' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'ELSE' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'LET' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'IN' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'EOF' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'ID' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'STRINGLIT' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'CHARLIT' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'NUM' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action 'error' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action '#' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
    action '$$' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' Params 'RPAR' 'EQ' Exp
  immediate action: <none>  gotos:state 14:  items:    Fun -> Type 'ID' 'LPAR' 'RPAR' . 'EQ' Exp
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (explicit left 9990):   shift 15
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 15:  items:    Fun -> Type 'ID' 'LPAR' 'RPAR' 'EQ' . Exp
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 16
state 16:  items:    Fun -> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp . 
    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'DEQ' Exp
    Exp -> Exp . 'LTH' Exp
    Exp -> Exp . 'MUL' Exp
    Exp -> Exp . 'DIV' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'OR' Exp
  actions:    action 'TRUE' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'FALSE' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'NEG' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'NOT' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'AND' (explicit left 9987):   shift 75
    action 'OR' (explicit left 9986):   shift 76
    action 'MUL' (explicit left 9993):   shift 71
    action 'DIV' (explicit left 9993):   shift 72
    action 'LPAR' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'RPAR' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'LBRACKET' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'RBRACKET' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'LCURLY' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'RCURLY' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'FUN' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'FN' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'COMMA' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'SEMICOLON' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'READ' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'WRITE' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'DEQ' (explicit left 9990):   shift 69
    action 'LTH' (explicit left 9990):   shift 70
    action 'EQ' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'MAP' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'REDUCE' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'IOTA' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'ARROW' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'REPLICATE' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'SCAN' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'FILTER' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'PLUS' (explicit left 9991):   shift 67
    action 'MINUS' (explicit left 9991):   shift 68
    action 'LESS' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'INT' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'CHAR' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'BOOL' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'IF' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'THEN' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'ELSE' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'LET' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'IN' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'EOF' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'ID' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'STRINGLIT' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'CHARLIT' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'NUM' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action 'error' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action '#' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
    action '$$' (explicit left 9990):   reduce Fun --> Type 'ID' 'LPAR' 'RPAR' 'EQ' Exp
  immediate action: <none>  gotos:state 17:  items:    Type -> 'INT' . 
  actions:    action 'TRUE' (noprec):   reduce Type --> 'INT'
    action 'FALSE' (noprec):   reduce Type --> 'INT'
    action 'NEG' (noprec):   reduce Type --> 'INT'
    action 'NOT' (noprec):   reduce Type --> 'INT'
    action 'AND' (noprec):   reduce Type --> 'INT'
    action 'OR' (noprec):   reduce Type --> 'INT'
    action 'MUL' (noprec):   reduce Type --> 'INT'
    action 'DIV' (noprec):   reduce Type --> 'INT'
    action 'LPAR' (noprec):   reduce Type --> 'INT'
    action 'RPAR' (noprec):   reduce Type --> 'INT'
    action 'LBRACKET' (noprec):   reduce Type --> 'INT'
    action 'RBRACKET' (noprec):   reduce Type --> 'INT'
    action 'LCURLY' (noprec):   reduce Type --> 'INT'
    action 'RCURLY' (noprec):   reduce Type --> 'INT'
    action 'FUN' (noprec):   reduce Type --> 'INT'
    action 'FN' (noprec):   reduce Type --> 'INT'
    action 'COMMA' (noprec):   reduce Type --> 'INT'
    action 'SEMICOLON' (noprec):   reduce Type --> 'INT'
    action 'READ' (noprec):   reduce Type --> 'INT'
    action 'WRITE' (noprec):   reduce Type --> 'INT'
    action 'DEQ' (noprec):   reduce Type --> 'INT'
    action 'LTH' (noprec):   reduce Type --> 'INT'
    action 'EQ' (noprec):   reduce Type --> 'INT'
    action 'MAP' (noprec):   reduce Type --> 'INT'
    action 'REDUCE' (noprec):   reduce Type --> 'INT'
    action 'IOTA' (noprec):   reduce Type --> 'INT'
    action 'ARROW' (noprec):   reduce Type --> 'INT'
    action 'REPLICATE' (noprec):   reduce Type --> 'INT'
    action 'SCAN' (noprec):   reduce Type --> 'INT'
    action 'FILTER' (noprec):   reduce Type --> 'INT'
    action 'PLUS' (noprec):   reduce Type --> 'INT'
    action 'MINUS' (noprec):   reduce Type --> 'INT'
    action 'LESS' (noprec):   reduce Type --> 'INT'
    action 'INT' (noprec):   reduce Type --> 'INT'
    action 'CHAR' (noprec):   reduce Type --> 'INT'
    action 'BOOL' (noprec):   reduce Type --> 'INT'
    action 'IF' (noprec):   reduce Type --> 'INT'
    action 'THEN' (noprec):   reduce Type --> 'INT'
    action 'ELSE' (noprec):   reduce Type --> 'INT'
    action 'LET' (noprec):   reduce Type --> 'INT'
    action 'IN' (noprec):   reduce Type --> 'INT'
    action 'EOF' (noprec):   reduce Type --> 'INT'
    action 'ID' (noprec):   reduce Type --> 'INT'
    action 'STRINGLIT' (noprec):   reduce Type --> 'INT'
    action 'CHARLIT' (noprec):   reduce Type --> 'INT'
    action 'NUM' (noprec):   reduce Type --> 'INT'
    action 'error' (noprec):   reduce Type --> 'INT'
    action '#' (noprec):   reduce Type --> 'INT'
    action '$$' (noprec):   reduce Type --> 'INT'
  immediate action:   reduce Type --> 'INT'  gotos:state 18:  items:    Type -> 'CHAR' . 
  actions:    action 'TRUE' (noprec):   reduce Type --> 'CHAR'
    action 'FALSE' (noprec):   reduce Type --> 'CHAR'
    action 'NEG' (noprec):   reduce Type --> 'CHAR'
    action 'NOT' (noprec):   reduce Type --> 'CHAR'
    action 'AND' (noprec):   reduce Type --> 'CHAR'
    action 'OR' (noprec):   reduce Type --> 'CHAR'
    action 'MUL' (noprec):   reduce Type --> 'CHAR'
    action 'DIV' (noprec):   reduce Type --> 'CHAR'
    action 'LPAR' (noprec):   reduce Type --> 'CHAR'
    action 'RPAR' (noprec):   reduce Type --> 'CHAR'
    action 'LBRACKET' (noprec):   reduce Type --> 'CHAR'
    action 'RBRACKET' (noprec):   reduce Type --> 'CHAR'
    action 'LCURLY' (noprec):   reduce Type --> 'CHAR'
    action 'RCURLY' (noprec):   reduce Type --> 'CHAR'
    action 'FUN' (noprec):   reduce Type --> 'CHAR'
    action 'FN' (noprec):   reduce Type --> 'CHAR'
    action 'COMMA' (noprec):   reduce Type --> 'CHAR'
    action 'SEMICOLON' (noprec):   reduce Type --> 'CHAR'
    action 'READ' (noprec):   reduce Type --> 'CHAR'
    action 'WRITE' (noprec):   reduce Type --> 'CHAR'
    action 'DEQ' (noprec):   reduce Type --> 'CHAR'
    action 'LTH' (noprec):   reduce Type --> 'CHAR'
    action 'EQ' (noprec):   reduce Type --> 'CHAR'
    action 'MAP' (noprec):   reduce Type --> 'CHAR'
    action 'REDUCE' (noprec):   reduce Type --> 'CHAR'
    action 'IOTA' (noprec):   reduce Type --> 'CHAR'
    action 'ARROW' (noprec):   reduce Type --> 'CHAR'
    action 'REPLICATE' (noprec):   reduce Type --> 'CHAR'
    action 'SCAN' (noprec):   reduce Type --> 'CHAR'
    action 'FILTER' (noprec):   reduce Type --> 'CHAR'
    action 'PLUS' (noprec):   reduce Type --> 'CHAR'
    action 'MINUS' (noprec):   reduce Type --> 'CHAR'
    action 'LESS' (noprec):   reduce Type --> 'CHAR'
    action 'INT' (noprec):   reduce Type --> 'CHAR'
    action 'CHAR' (noprec):   reduce Type --> 'CHAR'
    action 'BOOL' (noprec):   reduce Type --> 'CHAR'
    action 'IF' (noprec):   reduce Type --> 'CHAR'
    action 'THEN' (noprec):   reduce Type --> 'CHAR'
    action 'ELSE' (noprec):   reduce Type --> 'CHAR'
    action 'LET' (noprec):   reduce Type --> 'CHAR'
    action 'IN' (noprec):   reduce Type --> 'CHAR'
    action 'EOF' (noprec):   reduce Type --> 'CHAR'
    action 'ID' (noprec):   reduce Type --> 'CHAR'
    action 'STRINGLIT' (noprec):   reduce Type --> 'CHAR'
    action 'CHARLIT' (noprec):   reduce Type --> 'CHAR'
    action 'NUM' (noprec):   reduce Type --> 'CHAR'
    action 'error' (noprec):   reduce Type --> 'CHAR'
    action '#' (noprec):   reduce Type --> 'CHAR'
    action '$$' (noprec):   reduce Type --> 'CHAR'
  immediate action:   reduce Type --> 'CHAR'  gotos:state 19:  items:    Type -> 'BOOL' . 
  actions:    action 'TRUE' (noprec):   reduce Type --> 'BOOL'
    action 'FALSE' (noprec):   reduce Type --> 'BOOL'
    action 'NEG' (noprec):   reduce Type --> 'BOOL'
    action 'NOT' (noprec):   reduce Type --> 'BOOL'
    action 'AND' (noprec):   reduce Type --> 'BOOL'
    action 'OR' (noprec):   reduce Type --> 'BOOL'
    action 'MUL' (noprec):   reduce Type --> 'BOOL'
    action 'DIV' (noprec):   reduce Type --> 'BOOL'
    action 'LPAR' (noprec):   reduce Type --> 'BOOL'
    action 'RPAR' (noprec):   reduce Type --> 'BOOL'
    action 'LBRACKET' (noprec):   reduce Type --> 'BOOL'
    action 'RBRACKET' (noprec):   reduce Type --> 'BOOL'
    action 'LCURLY' (noprec):   reduce Type --> 'BOOL'
    action 'RCURLY' (noprec):   reduce Type --> 'BOOL'
    action 'FUN' (noprec):   reduce Type --> 'BOOL'
    action 'FN' (noprec):   reduce Type --> 'BOOL'
    action 'COMMA' (noprec):   reduce Type --> 'BOOL'
    action 'SEMICOLON' (noprec):   reduce Type --> 'BOOL'
    action 'READ' (noprec):   reduce Type --> 'BOOL'
    action 'WRITE' (noprec):   reduce Type --> 'BOOL'
    action 'DEQ' (noprec):   reduce Type --> 'BOOL'
    action 'LTH' (noprec):   reduce Type --> 'BOOL'
    action 'EQ' (noprec):   reduce Type --> 'BOOL'
    action 'MAP' (noprec):   reduce Type --> 'BOOL'
    action 'REDUCE' (noprec):   reduce Type --> 'BOOL'
    action 'IOTA' (noprec):   reduce Type --> 'BOOL'
    action 'ARROW' (noprec):   reduce Type --> 'BOOL'
    action 'REPLICATE' (noprec):   reduce Type --> 'BOOL'
    action 'SCAN' (noprec):   reduce Type --> 'BOOL'
    action 'FILTER' (noprec):   reduce Type --> 'BOOL'
    action 'PLUS' (noprec):   reduce Type --> 'BOOL'
    action 'MINUS' (noprec):   reduce Type --> 'BOOL'
    action 'LESS' (noprec):   reduce Type --> 'BOOL'
    action 'INT' (noprec):   reduce Type --> 'BOOL'
    action 'CHAR' (noprec):   reduce Type --> 'BOOL'
    action 'BOOL' (noprec):   reduce Type --> 'BOOL'
    action 'IF' (noprec):   reduce Type --> 'BOOL'
    action 'THEN' (noprec):   reduce Type --> 'BOOL'
    action 'ELSE' (noprec):   reduce Type --> 'BOOL'
    action 'LET' (noprec):   reduce Type --> 'BOOL'
    action 'IN' (noprec):   reduce Type --> 'BOOL'
    action 'EOF' (noprec):   reduce Type --> 'BOOL'
    action 'ID' (noprec):   reduce Type --> 'BOOL'
    action 'STRINGLIT' (noprec):   reduce Type --> 'BOOL'
    action 'CHARLIT' (noprec):   reduce Type --> 'BOOL'
    action 'NUM' (noprec):   reduce Type --> 'BOOL'
    action 'error' (noprec):   reduce Type --> 'BOOL'
    action '#' (noprec):   reduce Type --> 'BOOL'
    action '$$' (noprec):   reduce Type --> 'BOOL'
  immediate action:   reduce Type --> 'BOOL'  gotos:state 20:  items:    Type -> 'LBRACKET' . Type 'RBRACKET'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (explicit left 9998):   shift 20
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   shift 17
    action 'CHAR' (noprec):   shift 18
    action 'BOOL' (noprec):   shift 19
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Type: 21
state 21:  items:    Type -> 'LBRACKET' Type . 'RBRACKET'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (explicit left 9998):   shift 22
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 22:  items:    Type -> 'LBRACKET' Type 'RBRACKET' . 
  actions:    action 'TRUE' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'FALSE' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'NEG' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'NOT' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'AND' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'OR' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'MUL' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'DIV' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'LPAR' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'RPAR' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'LBRACKET' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'RBRACKET' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'LCURLY' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'RCURLY' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'FUN' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'FN' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'COMMA' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'SEMICOLON' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'READ' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'WRITE' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'DEQ' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'LTH' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'EQ' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'MAP' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'REDUCE' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'IOTA' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'ARROW' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'REPLICATE' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'SCAN' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'FILTER' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'PLUS' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'MINUS' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'LESS' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'INT' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'CHAR' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'BOOL' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'IF' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'THEN' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'ELSE' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'LET' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'IN' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'EOF' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'ID' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'STRINGLIT' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'CHARLIT' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'NUM' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action 'error' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action '#' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
    action '$$' (explicit left 9998):   reduce Type --> 'LBRACKET' Type 'RBRACKET'
  immediate action:   reduce Type --> 'LBRACKET' Type 'RBRACKET'  gotos:state 23:  items:    Params -> Type . 'ID' 'COMMA' Params
    Params -> Type . 'ID'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 24
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 24:  items:    Params -> Type 'ID' . 'COMMA' Params
    Params -> Type 'ID' . 
  actions:    action 'TRUE' (noprec):   reduce Params --> Type 'ID'
    action 'FALSE' (noprec):   reduce Params --> Type 'ID'
    action 'NEG' (noprec):   reduce Params --> Type 'ID'
    action 'NOT' (noprec):   reduce Params --> Type 'ID'
    action 'AND' (noprec):   reduce Params --> Type 'ID'
    action 'OR' (noprec):   reduce Params --> Type 'ID'
    action 'MUL' (noprec):   reduce Params --> Type 'ID'
    action 'DIV' (noprec):   reduce Params --> Type 'ID'
    action 'LPAR' (noprec):   reduce Params --> Type 'ID'
    action 'RPAR' (noprec):   reduce Params --> Type 'ID'
    action 'LBRACKET' (noprec):   reduce Params --> Type 'ID'
    action 'RBRACKET' (noprec):   reduce Params --> Type 'ID'
    action 'LCURLY' (noprec):   reduce Params --> Type 'ID'
    action 'RCURLY' (noprec):   reduce Params --> Type 'ID'
    action 'FUN' (noprec):   reduce Params --> Type 'ID'
    action 'FN' (noprec):   reduce Params --> Type 'ID'
    action 'COMMA' (explicit left 9995):   shift 25
    action 'SEMICOLON' (noprec):   reduce Params --> Type 'ID'
    action 'READ' (noprec):   reduce Params --> Type 'ID'
    action 'WRITE' (noprec):   reduce Params --> Type 'ID'
    action 'DEQ' (noprec):   reduce Params --> Type 'ID'
    action 'LTH' (noprec):   reduce Params --> Type 'ID'
    action 'EQ' (noprec):   reduce Params --> Type 'ID'
    action 'MAP' (noprec):   reduce Params --> Type 'ID'
    action 'REDUCE' (noprec):   reduce Params --> Type 'ID'
    action 'IOTA' (noprec):   reduce Params --> Type 'ID'
    action 'ARROW' (noprec):   reduce Params --> Type 'ID'
    action 'REPLICATE' (noprec):   reduce Params --> Type 'ID'
    action 'SCAN' (noprec):   reduce Params --> Type 'ID'
    action 'FILTER' (noprec):   reduce Params --> Type 'ID'
    action 'PLUS' (noprec):   reduce Params --> Type 'ID'
    action 'MINUS' (noprec):   reduce Params --> Type 'ID'
    action 'LESS' (noprec):   reduce Params --> Type 'ID'
    action 'INT' (noprec):   reduce Params --> Type 'ID'
    action 'CHAR' (noprec):   reduce Params --> Type 'ID'
    action 'BOOL' (noprec):   reduce Params --> Type 'ID'
    action 'IF' (noprec):   reduce Params --> Type 'ID'
    action 'THEN' (noprec):   reduce Params --> Type 'ID'
    action 'ELSE' (noprec):   reduce Params --> Type 'ID'
    action 'LET' (noprec):   reduce Params --> Type 'ID'
    action 'IN' (noprec):   reduce Params --> Type 'ID'
    action 'EOF' (noprec):   reduce Params --> Type 'ID'
    action 'ID' (noprec):   reduce Params --> Type 'ID'
    action 'STRINGLIT' (noprec):   reduce Params --> Type 'ID'
    action 'CHARLIT' (noprec):   reduce Params --> Type 'ID'
    action 'NUM' (noprec):   reduce Params --> Type 'ID'
    action 'error' (noprec):   reduce Params --> Type 'ID'
    action '#' (noprec):   reduce Params --> Type 'ID'
    action '$$' (noprec):   reduce Params --> Type 'ID'
  immediate action: <none>  gotos:state 25:  items:    Params -> Type 'ID' 'COMMA' . Params
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (explicit left 9998):   shift 20
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   shift 17
    action 'CHAR' (noprec):   shift 18
    action 'BOOL' (noprec):   shift 19
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Type: 23
    goto Params: 26
state 26:  items:    Params -> Type 'ID' 'COMMA' Params . 
  actions:    action 'TRUE' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'FALSE' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'NEG' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'NOT' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'AND' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'OR' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'MUL' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'DIV' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'LPAR' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'RPAR' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'LBRACKET' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'RBRACKET' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'LCURLY' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'RCURLY' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'FUN' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'FN' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'COMMA' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'SEMICOLON' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'READ' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'WRITE' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'DEQ' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'LTH' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'EQ' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'MAP' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'REDUCE' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'IOTA' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'ARROW' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'REPLICATE' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'SCAN' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'FILTER' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'PLUS' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'MINUS' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'LESS' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'INT' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'CHAR' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'BOOL' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'IF' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'THEN' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'ELSE' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'LET' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'IN' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'EOF' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'ID' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'STRINGLIT' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'CHARLIT' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'NUM' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action 'error' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action '#' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
    action '$$' (explicit left 9995):   reduce Params --> Type 'ID' 'COMMA' Params
  immediate action:   reduce Params --> Type 'ID' 'COMMA' Params  gotos:state 27:  items:    Exp -> 'NUM' . 
  actions:    action 'TRUE' (noprec):   reduce Exp --> 'NUM'
    action 'FALSE' (noprec):   reduce Exp --> 'NUM'
    action 'NEG' (noprec):   reduce Exp --> 'NUM'
    action 'NOT' (noprec):   reduce Exp --> 'NUM'
    action 'AND' (noprec):   reduce Exp --> 'NUM'
    action 'OR' (noprec):   reduce Exp --> 'NUM'
    action 'MUL' (noprec):   reduce Exp --> 'NUM'
    action 'DIV' (noprec):   reduce Exp --> 'NUM'
    action 'LPAR' (noprec):   reduce Exp --> 'NUM'
    action 'RPAR' (noprec):   reduce Exp --> 'NUM'
    action 'LBRACKET' (noprec):   reduce Exp --> 'NUM'
    action 'RBRACKET' (noprec):   reduce Exp --> 'NUM'
    action 'LCURLY' (noprec):   reduce Exp --> 'NUM'
    action 'RCURLY' (noprec):   reduce Exp --> 'NUM'
    action 'FUN' (noprec):   reduce Exp --> 'NUM'
    action 'FN' (noprec):   reduce Exp --> 'NUM'
    action 'COMMA' (noprec):   reduce Exp --> 'NUM'
    action 'SEMICOLON' (noprec):   reduce Exp --> 'NUM'
    action 'READ' (noprec):   reduce Exp --> 'NUM'
    action 'WRITE' (noprec):   reduce Exp --> 'NUM'
    action 'DEQ' (noprec):   reduce Exp --> 'NUM'
    action 'LTH' (noprec):   reduce Exp --> 'NUM'
    action 'EQ' (noprec):   reduce Exp --> 'NUM'
    action 'MAP' (noprec):   reduce Exp --> 'NUM'
    action 'REDUCE' (noprec):   reduce Exp --> 'NUM'
    action 'IOTA' (noprec):   reduce Exp --> 'NUM'
    action 'ARROW' (noprec):   reduce Exp --> 'NUM'
    action 'REPLICATE' (noprec):   reduce Exp --> 'NUM'
    action 'SCAN' (noprec):   reduce Exp --> 'NUM'
    action 'FILTER' (noprec):   reduce Exp --> 'NUM'
    action 'PLUS' (noprec):   reduce Exp --> 'NUM'
    action 'MINUS' (noprec):   reduce Exp --> 'NUM'
    action 'LESS' (noprec):   reduce Exp --> 'NUM'
    action 'INT' (noprec):   reduce Exp --> 'NUM'
    action 'CHAR' (noprec):   reduce Exp --> 'NUM'
    action 'BOOL' (noprec):   reduce Exp --> 'NUM'
    action 'IF' (noprec):   reduce Exp --> 'NUM'
    action 'THEN' (noprec):   reduce Exp --> 'NUM'
    action 'ELSE' (noprec):   reduce Exp --> 'NUM'
    action 'LET' (noprec):   reduce Exp --> 'NUM'
    action 'IN' (noprec):   reduce Exp --> 'NUM'
    action 'EOF' (noprec):   reduce Exp --> 'NUM'
    action 'ID' (noprec):   reduce Exp --> 'NUM'
    action 'STRINGLIT' (noprec):   reduce Exp --> 'NUM'
    action 'CHARLIT' (noprec):   reduce Exp --> 'NUM'
    action 'NUM' (noprec):   reduce Exp --> 'NUM'
    action 'error' (noprec):   reduce Exp --> 'NUM'
    action '#' (noprec):   reduce Exp --> 'NUM'
    action '$$' (noprec):   reduce Exp --> 'NUM'
  immediate action:   reduce Exp --> 'NUM'  gotos:state 28:  items:    Exp -> 'FALSE' . 
  actions:    action 'TRUE' (noprec):   reduce Exp --> 'FALSE'
    action 'FALSE' (noprec):   reduce Exp --> 'FALSE'
    action 'NEG' (noprec):   reduce Exp --> 'FALSE'
    action 'NOT' (noprec):   reduce Exp --> 'FALSE'
    action 'AND' (noprec):   reduce Exp --> 'FALSE'
    action 'OR' (noprec):   reduce Exp --> 'FALSE'
    action 'MUL' (noprec):   reduce Exp --> 'FALSE'
    action 'DIV' (noprec):   reduce Exp --> 'FALSE'
    action 'LPAR' (noprec):   reduce Exp --> 'FALSE'
    action 'RPAR' (noprec):   reduce Exp --> 'FALSE'
    action 'LBRACKET' (noprec):   reduce Exp --> 'FALSE'
    action 'RBRACKET' (noprec):   reduce Exp --> 'FALSE'
    action 'LCURLY' (noprec):   reduce Exp --> 'FALSE'
    action 'RCURLY' (noprec):   reduce Exp --> 'FALSE'
    action 'FUN' (noprec):   reduce Exp --> 'FALSE'
    action 'FN' (noprec):   reduce Exp --> 'FALSE'
    action 'COMMA' (noprec):   reduce Exp --> 'FALSE'
    action 'SEMICOLON' (noprec):   reduce Exp --> 'FALSE'
    action 'READ' (noprec):   reduce Exp --> 'FALSE'
    action 'WRITE' (noprec):   reduce Exp --> 'FALSE'
    action 'DEQ' (noprec):   reduce Exp --> 'FALSE'
    action 'LTH' (noprec):   reduce Exp --> 'FALSE'
    action 'EQ' (noprec):   reduce Exp --> 'FALSE'
    action 'MAP' (noprec):   reduce Exp --> 'FALSE'
    action 'REDUCE' (noprec):   reduce Exp --> 'FALSE'
    action 'IOTA' (noprec):   reduce Exp --> 'FALSE'
    action 'ARROW' (noprec):   reduce Exp --> 'FALSE'
    action 'REPLICATE' (noprec):   reduce Exp --> 'FALSE'
    action 'SCAN' (noprec):   reduce Exp --> 'FALSE'
    action 'FILTER' (noprec):   reduce Exp --> 'FALSE'
    action 'PLUS' (noprec):   reduce Exp --> 'FALSE'
    action 'MINUS' (noprec):   reduce Exp --> 'FALSE'
    action 'LESS' (noprec):   reduce Exp --> 'FALSE'
    action 'INT' (noprec):   reduce Exp --> 'FALSE'
    action 'CHAR' (noprec):   reduce Exp --> 'FALSE'
    action 'BOOL' (noprec):   reduce Exp --> 'FALSE'
    action 'IF' (noprec):   reduce Exp --> 'FALSE'
    action 'THEN' (noprec):   reduce Exp --> 'FALSE'
    action 'ELSE' (noprec):   reduce Exp --> 'FALSE'
    action 'LET' (noprec):   reduce Exp --> 'FALSE'
    action 'IN' (noprec):   reduce Exp --> 'FALSE'
    action 'EOF' (noprec):   reduce Exp --> 'FALSE'
    action 'ID' (noprec):   reduce Exp --> 'FALSE'
    action 'STRINGLIT' (noprec):   reduce Exp --> 'FALSE'
    action 'CHARLIT' (noprec):   reduce Exp --> 'FALSE'
    action 'NUM' (noprec):   reduce Exp --> 'FALSE'
    action 'error' (noprec):   reduce Exp --> 'FALSE'
    action '#' (noprec):   reduce Exp --> 'FALSE'
    action '$$' (noprec):   reduce Exp --> 'FALSE'
  immediate action:   reduce Exp --> 'FALSE'  gotos:state 29:  items:    Exp -> 'TRUE' . 
  actions:    action 'TRUE' (noprec):   reduce Exp --> 'TRUE'
    action 'FALSE' (noprec):   reduce Exp --> 'TRUE'
    action 'NEG' (noprec):   reduce Exp --> 'TRUE'
    action 'NOT' (noprec):   reduce Exp --> 'TRUE'
    action 'AND' (noprec):   reduce Exp --> 'TRUE'
    action 'OR' (noprec):   reduce Exp --> 'TRUE'
    action 'MUL' (noprec):   reduce Exp --> 'TRUE'
    action 'DIV' (noprec):   reduce Exp --> 'TRUE'
    action 'LPAR' (noprec):   reduce Exp --> 'TRUE'
    action 'RPAR' (noprec):   reduce Exp --> 'TRUE'
    action 'LBRACKET' (noprec):   reduce Exp --> 'TRUE'
    action 'RBRACKET' (noprec):   reduce Exp --> 'TRUE'
    action 'LCURLY' (noprec):   reduce Exp --> 'TRUE'
    action 'RCURLY' (noprec):   reduce Exp --> 'TRUE'
    action 'FUN' (noprec):   reduce Exp --> 'TRUE'
    action 'FN' (noprec):   reduce Exp --> 'TRUE'
    action 'COMMA' (noprec):   reduce Exp --> 'TRUE'
    action 'SEMICOLON' (noprec):   reduce Exp --> 'TRUE'
    action 'READ' (noprec):   reduce Exp --> 'TRUE'
    action 'WRITE' (noprec):   reduce Exp --> 'TRUE'
    action 'DEQ' (noprec):   reduce Exp --> 'TRUE'
    action 'LTH' (noprec):   reduce Exp --> 'TRUE'
    action 'EQ' (noprec):   reduce Exp --> 'TRUE'
    action 'MAP' (noprec):   reduce Exp --> 'TRUE'
    action 'REDUCE' (noprec):   reduce Exp --> 'TRUE'
    action 'IOTA' (noprec):   reduce Exp --> 'TRUE'
    action 'ARROW' (noprec):   reduce Exp --> 'TRUE'
    action 'REPLICATE' (noprec):   reduce Exp --> 'TRUE'
    action 'SCAN' (noprec):   reduce Exp --> 'TRUE'
    action 'FILTER' (noprec):   reduce Exp --> 'TRUE'
    action 'PLUS' (noprec):   reduce Exp --> 'TRUE'
    action 'MINUS' (noprec):   reduce Exp --> 'TRUE'
    action 'LESS' (noprec):   reduce Exp --> 'TRUE'
    action 'INT' (noprec):   reduce Exp --> 'TRUE'
    action 'CHAR' (noprec):   reduce Exp --> 'TRUE'
    action 'BOOL' (noprec):   reduce Exp --> 'TRUE'
    action 'IF' (noprec):   reduce Exp --> 'TRUE'
    action 'THEN' (noprec):   reduce Exp --> 'TRUE'
    action 'ELSE' (noprec):   reduce Exp --> 'TRUE'
    action 'LET' (noprec):   reduce Exp --> 'TRUE'
    action 'IN' (noprec):   reduce Exp --> 'TRUE'
    action 'EOF' (noprec):   reduce Exp --> 'TRUE'
    action 'ID' (noprec):   reduce Exp --> 'TRUE'
    action 'STRINGLIT' (noprec):   reduce Exp --> 'TRUE'
    action 'CHARLIT' (noprec):   reduce Exp --> 'TRUE'
    action 'NUM' (noprec):   reduce Exp --> 'TRUE'
    action 'error' (noprec):   reduce Exp --> 'TRUE'
    action '#' (noprec):   reduce Exp --> 'TRUE'
    action '$$' (noprec):   reduce Exp --> 'TRUE'
  immediate action:   reduce Exp --> 'TRUE'  gotos:state 30:  items:    Exp -> 'CHARLIT' . 
  actions:    action 'TRUE' (noprec):   reduce Exp --> 'CHARLIT'
    action 'FALSE' (noprec):   reduce Exp --> 'CHARLIT'
    action 'NEG' (noprec):   reduce Exp --> 'CHARLIT'
    action 'NOT' (noprec):   reduce Exp --> 'CHARLIT'
    action 'AND' (noprec):   reduce Exp --> 'CHARLIT'
    action 'OR' (noprec):   reduce Exp --> 'CHARLIT'
    action 'MUL' (noprec):   reduce Exp --> 'CHARLIT'
    action 'DIV' (noprec):   reduce Exp --> 'CHARLIT'
    action 'LPAR' (noprec):   reduce Exp --> 'CHARLIT'
    action 'RPAR' (noprec):   reduce Exp --> 'CHARLIT'
    action 'LBRACKET' (noprec):   reduce Exp --> 'CHARLIT'
    action 'RBRACKET' (noprec):   reduce Exp --> 'CHARLIT'
    action 'LCURLY' (noprec):   reduce Exp --> 'CHARLIT'
    action 'RCURLY' (noprec):   reduce Exp --> 'CHARLIT'
    action 'FUN' (noprec):   reduce Exp --> 'CHARLIT'
    action 'FN' (noprec):   reduce Exp --> 'CHARLIT'
    action 'COMMA' (noprec):   reduce Exp --> 'CHARLIT'
    action 'SEMICOLON' (noprec):   reduce Exp --> 'CHARLIT'
    action 'READ' (noprec):   reduce Exp --> 'CHARLIT'
    action 'WRITE' (noprec):   reduce Exp --> 'CHARLIT'
    action 'DEQ' (noprec):   reduce Exp --> 'CHARLIT'
    action 'LTH' (noprec):   reduce Exp --> 'CHARLIT'
    action 'EQ' (noprec):   reduce Exp --> 'CHARLIT'
    action 'MAP' (noprec):   reduce Exp --> 'CHARLIT'
    action 'REDUCE' (noprec):   reduce Exp --> 'CHARLIT'
    action 'IOTA' (noprec):   reduce Exp --> 'CHARLIT'
    action 'ARROW' (noprec):   reduce Exp --> 'CHARLIT'
    action 'REPLICATE' (noprec):   reduce Exp --> 'CHARLIT'
    action 'SCAN' (noprec):   reduce Exp --> 'CHARLIT'
    action 'FILTER' (noprec):   reduce Exp --> 'CHARLIT'
    action 'PLUS' (noprec):   reduce Exp --> 'CHARLIT'
    action 'MINUS' (noprec):   reduce Exp --> 'CHARLIT'
    action 'LESS' (noprec):   reduce Exp --> 'CHARLIT'
    action 'INT' (noprec):   reduce Exp --> 'CHARLIT'
    action 'CHAR' (noprec):   reduce Exp --> 'CHARLIT'
    action 'BOOL' (noprec):   reduce Exp --> 'CHARLIT'
    action 'IF' (noprec):   reduce Exp --> 'CHARLIT'
    action 'THEN' (noprec):   reduce Exp --> 'CHARLIT'
    action 'ELSE' (noprec):   reduce Exp --> 'CHARLIT'
    action 'LET' (noprec):   reduce Exp --> 'CHARLIT'
    action 'IN' (noprec):   reduce Exp --> 'CHARLIT'
    action 'EOF' (noprec):   reduce Exp --> 'CHARLIT'
    action 'ID' (noprec):   reduce Exp --> 'CHARLIT'
    action 'STRINGLIT' (noprec):   reduce Exp --> 'CHARLIT'
    action 'CHARLIT' (noprec):   reduce Exp --> 'CHARLIT'
    action 'NUM' (noprec):   reduce Exp --> 'CHARLIT'
    action 'error' (noprec):   reduce Exp --> 'CHARLIT'
    action '#' (noprec):   reduce Exp --> 'CHARLIT'
    action '$$' (noprec):   reduce Exp --> 'CHARLIT'
  immediate action:   reduce Exp --> 'CHARLIT'  gotos:state 31:  items:    Exp -> 'ID' . 
    Exp -> 'ID' . 'LPAR' Exps 'RPAR'
    Exp -> 'ID' . 'LPAR' 'RPAR'
    Exp -> 'ID' . 'LBRACKET' Exp 'RBRACKET'
  actions:    action 'TRUE' (noprec):   reduce Exp --> 'ID'
    action 'FALSE' (noprec):   reduce Exp --> 'ID'
    action 'NEG' (noprec):   reduce Exp --> 'ID'
    action 'NOT' (noprec):   reduce Exp --> 'ID'
    action 'AND' (noprec):   reduce Exp --> 'ID'
    action 'OR' (noprec):   reduce Exp --> 'ID'
    action 'MUL' (noprec):   reduce Exp --> 'ID'
    action 'DIV' (noprec):   reduce Exp --> 'ID'
    action 'LPAR' (noprec):   shift 80
    action 'RPAR' (noprec):   reduce Exp --> 'ID'
    action 'LBRACKET' (explicit left 9998):   shift 126
    action 'RBRACKET' (noprec):   reduce Exp --> 'ID'
    action 'LCURLY' (noprec):   reduce Exp --> 'ID'
    action 'RCURLY' (noprec):   reduce Exp --> 'ID'
    action 'FUN' (noprec):   reduce Exp --> 'ID'
    action 'FN' (noprec):   reduce Exp --> 'ID'
    action 'COMMA' (noprec):   reduce Exp --> 'ID'
    action 'SEMICOLON' (noprec):   reduce Exp --> 'ID'
    action 'READ' (noprec):   reduce Exp --> 'ID'
    action 'WRITE' (noprec):   reduce Exp --> 'ID'
    action 'DEQ' (noprec):   reduce Exp --> 'ID'
    action 'LTH' (noprec):   reduce Exp --> 'ID'
    action 'EQ' (noprec):   reduce Exp --> 'ID'
    action 'MAP' (noprec):   reduce Exp --> 'ID'
    action 'REDUCE' (noprec):   reduce Exp --> 'ID'
    action 'IOTA' (noprec):   reduce Exp --> 'ID'
    action 'ARROW' (noprec):   reduce Exp --> 'ID'
    action 'REPLICATE' (noprec):   reduce Exp --> 'ID'
    action 'SCAN' (noprec):   reduce Exp --> 'ID'
    action 'FILTER' (noprec):   reduce Exp --> 'ID'
    action 'PLUS' (noprec):   reduce Exp --> 'ID'
    action 'MINUS' (noprec):   reduce Exp --> 'ID'
    action 'LESS' (noprec):   reduce Exp --> 'ID'
    action 'INT' (noprec):   reduce Exp --> 'ID'
    action 'CHAR' (noprec):   reduce Exp --> 'ID'
    action 'BOOL' (noprec):   reduce Exp --> 'ID'
    action 'IF' (noprec):   reduce Exp --> 'ID'
    action 'THEN' (noprec):   reduce Exp --> 'ID'
    action 'ELSE' (noprec):   reduce Exp --> 'ID'
    action 'LET' (noprec):   reduce Exp --> 'ID'
    action 'IN' (noprec):   reduce Exp --> 'ID'
    action 'EOF' (noprec):   reduce Exp --> 'ID'
    action 'ID' (noprec):   reduce Exp --> 'ID'
    action 'STRINGLIT' (noprec):   reduce Exp --> 'ID'
    action 'CHARLIT' (noprec):   reduce Exp --> 'ID'
    action 'NUM' (noprec):   reduce Exp --> 'ID'
    action 'error' (noprec):   reduce Exp --> 'ID'
    action '#' (noprec):   reduce Exp --> 'ID'
    action '$$' (noprec):   reduce Exp --> 'ID'
  immediate action: <none>  gotos:state 32:  items:    Exp -> 'STRINGLIT' . 
  actions:    action 'TRUE' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'FALSE' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'NEG' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'NOT' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'AND' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'OR' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'MUL' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'DIV' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'LPAR' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'RPAR' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'LBRACKET' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'RBRACKET' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'LCURLY' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'RCURLY' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'FUN' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'FN' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'COMMA' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'SEMICOLON' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'READ' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'WRITE' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'DEQ' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'LTH' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'EQ' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'MAP' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'REDUCE' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'IOTA' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'ARROW' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'REPLICATE' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'SCAN' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'FILTER' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'PLUS' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'MINUS' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'LESS' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'INT' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'CHAR' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'BOOL' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'IF' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'THEN' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'ELSE' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'LET' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'IN' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'EOF' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'ID' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'STRINGLIT' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'CHARLIT' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'NUM' (noprec):   reduce Exp --> 'STRINGLIT'
    action 'error' (noprec):   reduce Exp --> 'STRINGLIT'
    action '#' (noprec):   reduce Exp --> 'STRINGLIT'
    action '$$' (noprec):   reduce Exp --> 'STRINGLIT'
  immediate action:   reduce Exp --> 'STRINGLIT'  gotos:state 33:  items:    Exp -> 'LCURLY' . Exps 'RCURLY'
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 64
    goto Exps: 34
state 34:  items:    Exp -> 'LCURLY' Exps . 'RCURLY'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (explicit left 9999):   shift 35
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 35:  items:    Exp -> 'LCURLY' Exps 'RCURLY' . 
  actions:    action 'TRUE' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'FALSE' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'NEG' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'NOT' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'AND' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'OR' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'MUL' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'DIV' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'LPAR' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'RPAR' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'LBRACKET' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'RBRACKET' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'LCURLY' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'RCURLY' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'FUN' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'FN' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'COMMA' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'SEMICOLON' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'READ' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'WRITE' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'DEQ' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'LTH' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'EQ' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'MAP' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'REDUCE' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'IOTA' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'ARROW' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'REPLICATE' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'SCAN' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'FILTER' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'PLUS' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'MINUS' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'LESS' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'INT' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'CHAR' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'BOOL' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'IF' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'THEN' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'ELSE' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'LET' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'IN' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'EOF' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'ID' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'STRINGLIT' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'CHARLIT' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'NUM' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action 'error' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action '#' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
    action '$$' (explicit left 9999):   reduce Exp --> 'LCURLY' Exps 'RCURLY'
  immediate action:   reduce Exp --> 'LCURLY' Exps 'RCURLY'  gotos:state 36:  items:    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp 'PLUS' Exp . 
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'DEQ' Exp
    Exp -> Exp . 'LTH' Exp
    Exp -> Exp . 'MUL' Exp
    Exp -> Exp . 'DIV' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'OR' Exp
  actions:    action 'TRUE' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'FALSE' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'NEG' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'NOT' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'AND' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'OR' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'MUL' (explicit left 9993):   shift 71
    action 'DIV' (explicit left 9993):   shift 72
    action 'LPAR' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'RPAR' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'LBRACKET' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'RBRACKET' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'LCURLY' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'RCURLY' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'FUN' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'FN' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'COMMA' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'SEMICOLON' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'READ' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'WRITE' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'DEQ' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'LTH' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'EQ' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'MAP' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'REDUCE' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'IOTA' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'ARROW' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'REPLICATE' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'SCAN' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'FILTER' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'PLUS' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'MINUS' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'LESS' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'INT' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'CHAR' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'BOOL' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'IF' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'THEN' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'ELSE' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'LET' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'IN' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'EOF' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'ID' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'STRINGLIT' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'CHARLIT' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'NUM' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action 'error' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action '#' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
    action '$$' (explicit left 9991):   reduce Exp --> Exp 'PLUS' Exp
  immediate action: <none>  gotos:state 37:  items:    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp 'MINUS' Exp . 
    Exp -> Exp . 'DEQ' Exp
    Exp -> Exp . 'LTH' Exp
    Exp -> Exp . 'MUL' Exp
    Exp -> Exp . 'DIV' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'OR' Exp
  actions:    action 'TRUE' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'FALSE' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'NEG' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'NOT' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'AND' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'OR' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'MUL' (explicit left 9993):   shift 71
    action 'DIV' (explicit left 9993):   shift 72
    action 'LPAR' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'RPAR' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'LBRACKET' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'RBRACKET' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'LCURLY' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'RCURLY' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'FUN' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'FN' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'COMMA' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'SEMICOLON' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'READ' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'WRITE' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'DEQ' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'LTH' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'EQ' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'MAP' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'REDUCE' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'IOTA' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'ARROW' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'REPLICATE' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'SCAN' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'FILTER' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'PLUS' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'MINUS' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'LESS' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'INT' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'CHAR' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'BOOL' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'IF' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'THEN' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'ELSE' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'LET' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'IN' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'EOF' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'ID' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'STRINGLIT' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'CHARLIT' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'NUM' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action 'error' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action '#' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
    action '$$' (explicit left 9991):   reduce Exp --> Exp 'MINUS' Exp
  immediate action: <none>  gotos:state 38:  items:    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'DEQ' Exp
    Exp -> Exp 'DEQ' Exp . 
    Exp -> Exp . 'LTH' Exp
    Exp -> Exp . 'MUL' Exp
    Exp -> Exp . 'DIV' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'OR' Exp
  actions:    action 'TRUE' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'FALSE' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'NEG' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'NOT' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'AND' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'OR' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'MUL' (explicit left 9993):   shift 71
    action 'DIV' (explicit left 9993):   shift 72
    action 'LPAR' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'RPAR' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'LBRACKET' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'RBRACKET' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'LCURLY' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'RCURLY' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'FUN' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'FN' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'COMMA' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'SEMICOLON' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'READ' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'WRITE' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'DEQ' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'LTH' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'EQ' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'MAP' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'REDUCE' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'IOTA' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'ARROW' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'REPLICATE' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'SCAN' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'FILTER' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'PLUS' (explicit left 9991):   shift 67
    action 'MINUS' (explicit left 9991):   shift 68
    action 'LESS' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'INT' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'CHAR' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'BOOL' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'IF' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'THEN' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'ELSE' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'LET' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'IN' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'EOF' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'ID' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'STRINGLIT' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'CHARLIT' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'NUM' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action 'error' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action '#' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
    action '$$' (explicit left 9990):   reduce Exp --> Exp 'DEQ' Exp
  immediate action: <none>  gotos:state 39:  items:    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'DEQ' Exp
    Exp -> Exp . 'LTH' Exp
    Exp -> Exp 'LTH' Exp . 
    Exp -> Exp . 'MUL' Exp
    Exp -> Exp . 'DIV' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'OR' Exp
  actions:    action 'TRUE' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'FALSE' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'NEG' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'NOT' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'AND' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'OR' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'MUL' (explicit left 9993):   shift 71
    action 'DIV' (explicit left 9993):   shift 72
    action 'LPAR' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'RPAR' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'LBRACKET' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'RBRACKET' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'LCURLY' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'RCURLY' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'FUN' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'FN' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'COMMA' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'SEMICOLON' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'READ' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'WRITE' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'DEQ' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'LTH' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'EQ' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'MAP' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'REDUCE' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'IOTA' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'ARROW' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'REPLICATE' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'SCAN' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'FILTER' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'PLUS' (explicit left 9991):   shift 67
    action 'MINUS' (explicit left 9991):   shift 68
    action 'LESS' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'INT' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'CHAR' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'BOOL' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'IF' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'THEN' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'ELSE' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'LET' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'IN' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'EOF' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'ID' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'STRINGLIT' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'CHARLIT' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'NUM' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action 'error' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action '#' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
    action '$$' (explicit left 9990):   reduce Exp --> Exp 'LTH' Exp
  immediate action: <none>  gotos:state 40:  items:    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'DEQ' Exp
    Exp -> Exp . 'LTH' Exp
    Exp -> Exp . 'MUL' Exp
    Exp -> Exp 'MUL' Exp . 
    Exp -> Exp . 'DIV' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'OR' Exp
  actions:    action 'TRUE' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'FALSE' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'NEG' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'NOT' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'AND' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'OR' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'MUL' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'DIV' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'LPAR' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'RPAR' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'LBRACKET' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'RBRACKET' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'LCURLY' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'RCURLY' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'FUN' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'FN' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'COMMA' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'SEMICOLON' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'READ' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'WRITE' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'DEQ' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'LTH' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'EQ' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'MAP' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'REDUCE' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'IOTA' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'ARROW' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'REPLICATE' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'SCAN' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'FILTER' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'PLUS' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'MINUS' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'LESS' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'INT' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'CHAR' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'BOOL' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'IF' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'THEN' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'ELSE' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'LET' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'IN' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'EOF' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'ID' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'STRINGLIT' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'CHARLIT' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'NUM' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action 'error' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action '#' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
    action '$$' (explicit left 9993):   reduce Exp --> Exp 'MUL' Exp
  immediate action: <none>  gotos:state 41:  items:    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'DEQ' Exp
    Exp -> Exp . 'LTH' Exp
    Exp -> Exp . 'MUL' Exp
    Exp -> Exp . 'DIV' Exp
    Exp -> Exp 'DIV' Exp . 
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'OR' Exp
  actions:    action 'TRUE' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'FALSE' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'NEG' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'NOT' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'AND' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'OR' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'MUL' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'DIV' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'LPAR' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'RPAR' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'LBRACKET' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'RBRACKET' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'LCURLY' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'RCURLY' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'FUN' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'FN' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'COMMA' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'SEMICOLON' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'READ' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'WRITE' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'DEQ' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'LTH' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'EQ' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'MAP' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'REDUCE' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'IOTA' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'ARROW' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'REPLICATE' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'SCAN' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'FILTER' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'PLUS' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'MINUS' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'LESS' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'INT' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'CHAR' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'BOOL' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'IF' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'THEN' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'ELSE' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'LET' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'IN' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'EOF' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'ID' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'STRINGLIT' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'CHARLIT' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'NUM' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action 'error' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action '#' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
    action '$$' (explicit left 9993):   reduce Exp --> Exp 'DIV' Exp
  immediate action: <none>  gotos:state 42:  items:    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'DEQ' Exp
    Exp -> Exp . 'LTH' Exp
    Exp -> Exp . 'MUL' Exp
    Exp -> Exp . 'DIV' Exp
    Exp -> 'NOT' Exp . 
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'OR' Exp
  actions:    action 'TRUE' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'FALSE' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'NEG' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'NOT' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'AND' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'OR' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'MUL' (explicit left 9993):   shift 71
    action 'DIV' (explicit left 9993):   shift 72
    action 'LPAR' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'RPAR' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'LBRACKET' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'RBRACKET' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'LCURLY' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'RCURLY' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'FUN' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'FN' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'COMMA' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'SEMICOLON' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'READ' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'WRITE' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'DEQ' (explicit left 9990):   shift 69
    action 'LTH' (explicit left 9990):   shift 70
    action 'EQ' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'MAP' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'REDUCE' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'IOTA' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'ARROW' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'REPLICATE' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'SCAN' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'FILTER' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'PLUS' (explicit left 9991):   shift 67
    action 'MINUS' (explicit left 9991):   shift 68
    action 'LESS' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'INT' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'CHAR' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'BOOL' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'IF' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'THEN' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'ELSE' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'LET' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'IN' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'EOF' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'ID' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'STRINGLIT' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'CHARLIT' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'NUM' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action 'error' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action '#' (explicit left 9987):   reduce Exp --> 'NOT' Exp
    action '$$' (explicit left 9987):   reduce Exp --> 'NOT' Exp
  immediate action: <none>  gotos:state 43:  items:    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'DEQ' Exp
    Exp -> Exp . 'LTH' Exp
    Exp -> Exp . 'MUL' Exp
    Exp -> Exp . 'DIV' Exp
    Exp -> 'NEG' Exp . 
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'OR' Exp
  actions:    action 'TRUE' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'FALSE' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'NEG' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'NOT' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'AND' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'OR' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'MUL' (explicit left 9993):   shift 71
    action 'DIV' (explicit left 9993):   shift 72
    action 'LPAR' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'RPAR' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'LBRACKET' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'RBRACKET' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'LCURLY' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'RCURLY' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'FUN' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'FN' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'COMMA' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'SEMICOLON' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'READ' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'WRITE' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'DEQ' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'LTH' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'EQ' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'MAP' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'REDUCE' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'IOTA' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'ARROW' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'REPLICATE' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'SCAN' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'FILTER' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'PLUS' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'MINUS' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'LESS' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'INT' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'CHAR' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'BOOL' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'IF' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'THEN' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'ELSE' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'LET' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'IN' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'EOF' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'ID' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'STRINGLIT' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'CHARLIT' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'NUM' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action 'error' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action '#' (explicit right 9992):   reduce Exp --> 'NEG' Exp
    action '$$' (explicit right 9992):   reduce Exp --> 'NEG' Exp
  immediate action: <none>  gotos:state 44:  items:    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'DEQ' Exp
    Exp -> Exp . 'LTH' Exp
    Exp -> Exp . 'MUL' Exp
    Exp -> Exp . 'DIV' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp 'AND' Exp . 
    Exp -> Exp . 'OR' Exp
  actions:    action 'TRUE' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'FALSE' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'NEG' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'NOT' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'AND' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'OR' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'MUL' (explicit left 9993):   shift 71
    action 'DIV' (explicit left 9993):   shift 72
    action 'LPAR' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'RPAR' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'LBRACKET' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'RBRACKET' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'LCURLY' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'RCURLY' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'FUN' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'FN' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'COMMA' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'SEMICOLON' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'READ' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'WRITE' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'DEQ' (explicit left 9990):   shift 69
    action 'LTH' (explicit left 9990):   shift 70
    action 'EQ' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'MAP' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'REDUCE' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'IOTA' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'ARROW' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'REPLICATE' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'SCAN' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'FILTER' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'PLUS' (explicit left 9991):   shift 67
    action 'MINUS' (explicit left 9991):   shift 68
    action 'LESS' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'INT' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'CHAR' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'BOOL' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'IF' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'THEN' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'ELSE' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'LET' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'IN' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'EOF' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'ID' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'STRINGLIT' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'CHARLIT' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'NUM' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action 'error' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action '#' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
    action '$$' (explicit left 9987):   reduce Exp --> Exp 'AND' Exp
  immediate action: <none>  gotos:state 45:  items:    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'DEQ' Exp
    Exp -> Exp . 'LTH' Exp
    Exp -> Exp . 'MUL' Exp
    Exp -> Exp . 'DIV' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'OR' Exp
    Exp -> Exp 'OR' Exp . 
  actions:    action 'TRUE' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'FALSE' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'NEG' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'NOT' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'AND' (explicit left 9987):   shift 75
    action 'OR' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'MUL' (explicit left 9993):   shift 71
    action 'DIV' (explicit left 9993):   shift 72
    action 'LPAR' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'RPAR' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'LBRACKET' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'RBRACKET' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'LCURLY' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'RCURLY' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'FUN' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'FN' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'COMMA' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'SEMICOLON' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'READ' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'WRITE' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'DEQ' (explicit left 9990):   shift 69
    action 'LTH' (explicit left 9990):   shift 70
    action 'EQ' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'MAP' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'REDUCE' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'IOTA' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'ARROW' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'REPLICATE' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'SCAN' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'FILTER' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'PLUS' (explicit left 9991):   shift 67
    action 'MINUS' (explicit left 9991):   shift 68
    action 'LESS' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'INT' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'CHAR' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'BOOL' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'IF' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'THEN' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'ELSE' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'LET' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'IN' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'EOF' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'ID' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'STRINGLIT' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'CHARLIT' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'NUM' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action 'error' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action '#' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
    action '$$' (explicit left 9986):   reduce Exp --> Exp 'OR' Exp
  immediate action: <none>  gotos:state 46:  items:    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'DEQ' Exp
    Exp -> Exp . 'LTH' Exp
    Exp -> Exp . 'MUL' Exp
    Exp -> Exp . 'DIV' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'OR' Exp
    Exp -> 'IF' Exp . 'THEN' Exp 'ELSE' Exp
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (explicit left 9987):   shift 75
    action 'OR' (explicit left 9986):   shift 76
    action 'MUL' (explicit left 9993):   shift 71
    action 'DIV' (explicit left 9993):   shift 72
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (explicit left 9990):   shift 69
    action 'LTH' (explicit left 9990):   shift 70
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (explicit left 9991):   shift 67
    action 'MINUS' (explicit left 9991):   shift 68
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (explicit left 9988):   shift 78
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 47:  items:    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'DEQ' Exp
    Exp -> Exp . 'LTH' Exp
    Exp -> Exp . 'MUL' Exp
    Exp -> Exp . 'DIV' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'OR' Exp
    Exp -> 'IF' Exp 'THEN' Exp . 'ELSE' Exp
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (explicit left 9987):   shift 75
    action 'OR' (explicit left 9986):   shift 76
    action 'MUL' (explicit left 9993):   shift 71
    action 'DIV' (explicit left 9993):   shift 72
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (explicit left 9990):   shift 69
    action 'LTH' (explicit left 9990):   shift 70
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (explicit left 9991):   shift 67
    action 'MINUS' (explicit left 9991):   shift 68
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (explicit left 9988):   shift 79
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 48:  items:    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'DEQ' Exp
    Exp -> Exp . 'LTH' Exp
    Exp -> Exp . 'MUL' Exp
    Exp -> Exp . 'DIV' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'OR' Exp
    Exp -> 'IF' Exp 'THEN' Exp 'ELSE' Exp . 
  actions:    action 'TRUE' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'FALSE' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'NEG' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'NOT' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'AND' (explicit left 9987):   shift 75
    action 'OR' (explicit left 9986):   shift 76
    action 'MUL' (explicit left 9993):   shift 71
    action 'DIV' (explicit left 9993):   shift 72
    action 'LPAR' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'RPAR' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'LBRACKET' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'RBRACKET' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'LCURLY' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'RCURLY' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'FUN' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'FN' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'COMMA' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'SEMICOLON' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'READ' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'WRITE' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'DEQ' (explicit left 9990):   shift 69
    action 'LTH' (explicit left 9990):   shift 70
    action 'EQ' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'MAP' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'REDUCE' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'IOTA' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'ARROW' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'REPLICATE' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'SCAN' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'FILTER' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'PLUS' (explicit left 9991):   shift 67
    action 'MINUS' (explicit left 9991):   shift 68
    action 'LESS' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'INT' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'CHAR' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'BOOL' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'IF' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'THEN' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'ELSE' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'LET' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'IN' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'EOF' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'ID' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'STRINGLIT' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'CHARLIT' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'NUM' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action 'error' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action '#' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
    action '$$' (explicit nonassoc 9984):   reduce Exp --> 'IF' Exp 'THEN' Exp 'ELSE' Exp
  immediate action: <none>  gotos:state 49:  items:    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'DEQ' Exp
    Exp -> Exp . 'LTH' Exp
    Exp -> Exp . 'MUL' Exp
    Exp -> Exp . 'DIV' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'OR' Exp
    Exp -> 'WRITE' 'LPAR' Exp . 'RPAR'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (explicit left 9987):   shift 75
    action 'OR' (explicit left 9986):   shift 76
    action 'MUL' (explicit left 9993):   shift 71
    action 'DIV' (explicit left 9993):   shift 72
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   shift 90
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (explicit left 9990):   shift 69
    action 'LTH' (explicit left 9990):   shift 70
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (explicit left 9991):   shift 67
    action 'MINUS' (explicit left 9991):   shift 68
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 50:  items:    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'DEQ' Exp
    Exp -> Exp . 'LTH' Exp
    Exp -> Exp . 'MUL' Exp
    Exp -> Exp . 'DIV' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'OR' Exp
    Exp -> 'IOTA' 'LPAR' Exp . 'RPAR'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (explicit left 9987):   shift 75
    action 'OR' (explicit left 9986):   shift 76
    action 'MUL' (explicit left 9993):   shift 71
    action 'DIV' (explicit left 9993):   shift 72
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   shift 93
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (explicit left 9990):   shift 69
    action 'LTH' (explicit left 9990):   shift 70
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (explicit left 9991):   shift 67
    action 'MINUS' (explicit left 9991):   shift 68
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 51:  items:    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'DEQ' Exp
    Exp -> Exp . 'LTH' Exp
    Exp -> Exp . 'MUL' Exp
    Exp -> Exp . 'DIV' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'OR' Exp
    Exp -> 'REPLICATE' 'LPAR' Exp . 'COMMA' Exp 'RPAR'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (explicit left 9987):   shift 75
    action 'OR' (explicit left 9986):   shift 76
    action 'MUL' (explicit left 9993):   shift 71
    action 'DIV' (explicit left 9993):   shift 72
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (explicit left 9995):   shift 96
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (explicit left 9990):   shift 69
    action 'LTH' (explicit left 9990):   shift 70
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (explicit left 9991):   shift 67
    action 'MINUS' (explicit left 9991):   shift 68
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 52:  items:    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'DEQ' Exp
    Exp -> Exp . 'LTH' Exp
    Exp -> Exp . 'MUL' Exp
    Exp -> Exp . 'DIV' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'OR' Exp
    Exp -> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp . 'RPAR'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (explicit left 9987):   shift 75
    action 'OR' (explicit left 9986):   shift 76
    action 'MUL' (explicit left 9993):   shift 71
    action 'DIV' (explicit left 9993):   shift 72
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   shift 97
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (explicit left 9990):   shift 69
    action 'LTH' (explicit left 9990):   shift 70
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (explicit left 9991):   shift 67
    action 'MINUS' (explicit left 9991):   shift 68
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 53:  items:    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'DEQ' Exp
    Exp -> Exp . 'LTH' Exp
    Exp -> Exp . 'MUL' Exp
    Exp -> Exp . 'DIV' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'OR' Exp
    Exp -> 'MAP' 'LPAR' FunArg 'COMMA' Exp . 'RPAR'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (explicit left 9987):   shift 75
    action 'OR' (explicit left 9986):   shift 76
    action 'MUL' (explicit left 9993):   shift 71
    action 'DIV' (explicit left 9993):   shift 72
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   shift 102
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (explicit left 9990):   shift 69
    action 'LTH' (explicit left 9990):   shift 70
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (explicit left 9991):   shift 67
    action 'MINUS' (explicit left 9991):   shift 68
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 54:  items:    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'DEQ' Exp
    Exp -> Exp . 'LTH' Exp
    Exp -> Exp . 'MUL' Exp
    Exp -> Exp . 'DIV' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'OR' Exp
    Exp -> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp . 'COMMA' Exp 'RPAR'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (explicit left 9987):   shift 75
    action 'OR' (explicit left 9986):   shift 76
    action 'MUL' (explicit left 9993):   shift 71
    action 'DIV' (explicit left 9993):   shift 72
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (explicit left 9995):   shift 107
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (explicit left 9990):   shift 69
    action 'LTH' (explicit left 9990):   shift 70
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (explicit left 9991):   shift 67
    action 'MINUS' (explicit left 9991):   shift 68
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 55:  items:    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'DEQ' Exp
    Exp -> Exp . 'LTH' Exp
    Exp -> Exp . 'MUL' Exp
    Exp -> Exp . 'DIV' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'OR' Exp
    Exp -> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp . 'RPAR'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (explicit left 9987):   shift 75
    action 'OR' (explicit left 9986):   shift 76
    action 'MUL' (explicit left 9993):   shift 71
    action 'DIV' (explicit left 9993):   shift 72
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   shift 108
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (explicit left 9990):   shift 69
    action 'LTH' (explicit left 9990):   shift 70
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (explicit left 9991):   shift 67
    action 'MINUS' (explicit left 9991):   shift 68
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 56:  items:    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'DEQ' Exp
    Exp -> Exp . 'LTH' Exp
    Exp -> Exp . 'MUL' Exp
    Exp -> Exp . 'DIV' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'OR' Exp
    Exp -> 'LPAR' Exp . 'RPAR'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (explicit left 9987):   shift 75
    action 'OR' (explicit left 9986):   shift 76
    action 'MUL' (explicit left 9993):   shift 71
    action 'DIV' (explicit left 9993):   shift 72
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   shift 110
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (explicit left 9990):   shift 69
    action 'LTH' (explicit left 9990):   shift 70
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (explicit left 9991):   shift 67
    action 'MINUS' (explicit left 9991):   shift 68
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 57:  items:    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'DEQ' Exp
    Exp -> Exp . 'LTH' Exp
    Exp -> Exp . 'MUL' Exp
    Exp -> Exp . 'DIV' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'OR' Exp
    Exp -> 'SCAN' 'LPAR' FunArg 'COMMA' Exp . 'COMMA' Exp 'RPAR'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (explicit left 9987):   shift 75
    action 'OR' (explicit left 9986):   shift 76
    action 'MUL' (explicit left 9993):   shift 71
    action 'DIV' (explicit left 9993):   shift 72
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (explicit left 9995):   shift 115
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (explicit left 9990):   shift 69
    action 'LTH' (explicit left 9990):   shift 70
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (explicit left 9991):   shift 67
    action 'MINUS' (explicit left 9991):   shift 68
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 58:  items:    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'DEQ' Exp
    Exp -> Exp . 'LTH' Exp
    Exp -> Exp . 'MUL' Exp
    Exp -> Exp . 'DIV' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'OR' Exp
    Exp -> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp . 'RPAR'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (explicit left 9987):   shift 75
    action 'OR' (explicit left 9986):   shift 76
    action 'MUL' (explicit left 9993):   shift 71
    action 'DIV' (explicit left 9993):   shift 72
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   shift 116
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (explicit left 9990):   shift 69
    action 'LTH' (explicit left 9990):   shift 70
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (explicit left 9991):   shift 67
    action 'MINUS' (explicit left 9991):   shift 68
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 59:  items:    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'DEQ' Exp
    Exp -> Exp . 'LTH' Exp
    Exp -> Exp . 'MUL' Exp
    Exp -> Exp . 'DIV' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'OR' Exp
    Exp -> 'FILTER' 'LPAR' FunArg 'COMMA' Exp . 'RPAR'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (explicit left 9987):   shift 75
    action 'OR' (explicit left 9986):   shift 76
    action 'MUL' (explicit left 9993):   shift 71
    action 'DIV' (explicit left 9993):   shift 72
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   shift 121
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (explicit left 9990):   shift 69
    action 'LTH' (explicit left 9990):   shift 70
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (explicit left 9991):   shift 67
    action 'MINUS' (explicit left 9991):   shift 68
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 60:  items:    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'DEQ' Exp
    Exp -> Exp . 'LTH' Exp
    Exp -> Exp . 'MUL' Exp
    Exp -> Exp . 'DIV' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'OR' Exp
    Exp -> 'LET' 'ID' 'EQ' Exp . Lets
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (explicit left 9987):   shift 75
    action 'OR' (explicit left 9986):   shift 76
    action 'MUL' (explicit left 9993):   shift 71
    action 'DIV' (explicit left 9993):   shift 72
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (explicit left 9996):   shift 128
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (explicit left 9990):   shift 69
    action 'LTH' (explicit left 9990):   shift 70
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (explicit left 9991):   shift 67
    action 'MINUS' (explicit left 9991):   shift 68
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (explicit left 9989):   shift 132
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Lets: 125
state 61:  items:    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'DEQ' Exp
    Exp -> Exp . 'LTH' Exp
    Exp -> Exp . 'MUL' Exp
    Exp -> Exp . 'DIV' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'OR' Exp
    Exp -> 'ID' 'LBRACKET' Exp . 'RBRACKET'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (explicit left 9987):   shift 75
    action 'OR' (explicit left 9986):   shift 76
    action 'MUL' (explicit left 9993):   shift 71
    action 'DIV' (explicit left 9993):   shift 72
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (explicit left 9998):   shift 127
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (explicit left 9990):   shift 69
    action 'LTH' (explicit left 9990):   shift 70
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (explicit left 9991):   shift 67
    action 'MINUS' (explicit left 9991):   shift 68
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 62:  items:    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'DEQ' Exp
    Exp -> Exp . 'LTH' Exp
    Exp -> Exp . 'MUL' Exp
    Exp -> Exp . 'DIV' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'OR' Exp
    Lets -> 'SEMICOLON' 'ID' 'EQ' Exp . Lets
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (explicit left 9987):   shift 75
    action 'OR' (explicit left 9986):   shift 76
    action 'MUL' (explicit left 9993):   shift 71
    action 'DIV' (explicit left 9993):   shift 72
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (explicit left 9996):   shift 128
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (explicit left 9990):   shift 69
    action 'LTH' (explicit left 9990):   shift 70
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (explicit left 9991):   shift 67
    action 'MINUS' (explicit left 9991):   shift 68
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (explicit left 9989):   shift 132
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Lets: 131
state 63:  items:    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'DEQ' Exp
    Exp -> Exp . 'LTH' Exp
    Exp -> Exp . 'MUL' Exp
    Exp -> Exp . 'DIV' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'OR' Exp
    Lets -> 'IN' Exp . 
  actions:    action 'TRUE' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'FALSE' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'NEG' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'NOT' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'AND' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'OR' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'MUL' (explicit left 9993):   shift 71
    action 'DIV' (explicit left 9993):   shift 72
    action 'LPAR' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'RPAR' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'LBRACKET' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'RBRACKET' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'LCURLY' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'RCURLY' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'FUN' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'FN' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'COMMA' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'SEMICOLON' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'READ' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'WRITE' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'DEQ' (explicit left 9990):   shift 69
    action 'LTH' (explicit left 9990):   shift 70
    action 'EQ' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'MAP' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'REDUCE' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'IOTA' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'ARROW' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'REPLICATE' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'SCAN' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'FILTER' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'PLUS' (explicit left 9991):   shift 67
    action 'MINUS' (explicit left 9991):   shift 68
    action 'LESS' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'INT' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'CHAR' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'BOOL' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'IF' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'THEN' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'ELSE' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'LET' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'IN' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'EOF' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'ID' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'STRINGLIT' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'CHARLIT' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'NUM' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action 'error' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action '#' (explicit left 9989):   reduce Lets --> 'IN' Exp
    action '$$' (explicit left 9989):   reduce Lets --> 'IN' Exp
  immediate action: <none>  gotos:state 64:  items:    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'DEQ' Exp
    Exp -> Exp . 'LTH' Exp
    Exp -> Exp . 'MUL' Exp
    Exp -> Exp . 'DIV' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'OR' Exp
    Exps -> Exp . 'COMMA' Exps
    Exps -> Exp . 
  actions:    action 'TRUE' (noprec):   reduce Exps --> Exp
    action 'FALSE' (noprec):   reduce Exps --> Exp
    action 'NEG' (noprec):   reduce Exps --> Exp
    action 'NOT' (noprec):   reduce Exps --> Exp
    action 'AND' (explicit left 9987):   shift 75
    action 'OR' (explicit left 9986):   shift 76
    action 'MUL' (explicit left 9993):   shift 71
    action 'DIV' (explicit left 9993):   shift 72
    action 'LPAR' (noprec):   reduce Exps --> Exp
    action 'RPAR' (noprec):   reduce Exps --> Exp
    action 'LBRACKET' (noprec):   reduce Exps --> Exp
    action 'RBRACKET' (noprec):   reduce Exps --> Exp
    action 'LCURLY' (noprec):   reduce Exps --> Exp
    action 'RCURLY' (noprec):   reduce Exps --> Exp
    action 'FUN' (noprec):   reduce Exps --> Exp
    action 'FN' (noprec):   reduce Exps --> Exp
    action 'COMMA' (explicit left 9995):   shift 133
    action 'SEMICOLON' (noprec):   reduce Exps --> Exp
    action 'READ' (noprec):   reduce Exps --> Exp
    action 'WRITE' (noprec):   reduce Exps --> Exp
    action 'DEQ' (explicit left 9990):   shift 69
    action 'LTH' (explicit left 9990):   shift 70
    action 'EQ' (noprec):   reduce Exps --> Exp
    action 'MAP' (noprec):   reduce Exps --> Exp
    action 'REDUCE' (noprec):   reduce Exps --> Exp
    action 'IOTA' (noprec):   reduce Exps --> Exp
    action 'ARROW' (noprec):   reduce Exps --> Exp
    action 'REPLICATE' (noprec):   reduce Exps --> Exp
    action 'SCAN' (noprec):   reduce Exps --> Exp
    action 'FILTER' (noprec):   reduce Exps --> Exp
    action 'PLUS' (explicit left 9991):   shift 67
    action 'MINUS' (explicit left 9991):   shift 68
    action 'LESS' (noprec):   reduce Exps --> Exp
    action 'INT' (noprec):   reduce Exps --> Exp
    action 'CHAR' (noprec):   reduce Exps --> Exp
    action 'BOOL' (noprec):   reduce Exps --> Exp
    action 'IF' (noprec):   reduce Exps --> Exp
    action 'THEN' (noprec):   reduce Exps --> Exp
    action 'ELSE' (noprec):   reduce Exps --> Exp
    action 'LET' (noprec):   reduce Exps --> Exp
    action 'IN' (noprec):   reduce Exps --> Exp
    action 'EOF' (noprec):   reduce Exps --> Exp
    action 'ID' (noprec):   reduce Exps --> Exp
    action 'STRINGLIT' (noprec):   reduce Exps --> Exp
    action 'CHARLIT' (noprec):   reduce Exps --> Exp
    action 'NUM' (noprec):   reduce Exps --> Exp
    action 'error' (noprec):   reduce Exps --> Exp
    action '#' (noprec):   reduce Exps --> Exp
    action '$$' (noprec):   reduce Exps --> Exp
  immediate action: <none>  gotos:state 65:  items:    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'DEQ' Exp
    Exp -> Exp . 'LTH' Exp
    Exp -> Exp . 'MUL' Exp
    Exp -> Exp . 'DIV' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'OR' Exp
    FunArg -> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp . 
  actions:    action 'TRUE' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'FALSE' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'NEG' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'NOT' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'AND' (explicit left 9987):   shift 75
    action 'OR' (explicit left 9986):   shift 76
    action 'MUL' (explicit left 9993):   shift 71
    action 'DIV' (explicit left 9993):   shift 72
    action 'LPAR' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'RPAR' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'LBRACKET' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'RBRACKET' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'LCURLY' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'RCURLY' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'FUN' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'FN' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'COMMA' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'SEMICOLON' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'READ' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'WRITE' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'DEQ' (explicit left 9990):   shift 69
    action 'LTH' (explicit left 9990):   shift 70
    action 'EQ' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'MAP' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'REDUCE' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'IOTA' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'ARROW' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'REPLICATE' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'SCAN' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'FILTER' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'PLUS' (explicit left 9991):   shift 67
    action 'MINUS' (explicit left 9991):   shift 68
    action 'LESS' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'INT' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'CHAR' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'BOOL' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'IF' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'THEN' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'ELSE' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'LET' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'IN' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'EOF' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'ID' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'STRINGLIT' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'CHARLIT' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'NUM' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action 'error' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action '#' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
    action '$$' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' 'RPAR' 'ARROW' Exp
  immediate action: <none>  gotos:state 66:  items:    Exp -> Exp . 'PLUS' Exp
    Exp -> Exp . 'MINUS' Exp
    Exp -> Exp . 'DEQ' Exp
    Exp -> Exp . 'LTH' Exp
    Exp -> Exp . 'MUL' Exp
    Exp -> Exp . 'DIV' Exp
    Exp -> Exp . 'AND' Exp
    Exp -> Exp . 'OR' Exp
    FunArg -> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp . 
  actions:    action 'TRUE' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'FALSE' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'NEG' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'NOT' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'AND' (explicit left 9987):   shift 75
    action 'OR' (explicit left 9986):   shift 76
    action 'MUL' (explicit left 9993):   shift 71
    action 'DIV' (explicit left 9993):   shift 72
    action 'LPAR' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'RPAR' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'LBRACKET' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'RBRACKET' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'LCURLY' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'RCURLY' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'FUN' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'FN' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'COMMA' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'SEMICOLON' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'READ' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'WRITE' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'DEQ' (explicit left 9990):   shift 69
    action 'LTH' (explicit left 9990):   shift 70
    action 'EQ' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'MAP' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'REDUCE' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'IOTA' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'ARROW' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'REPLICATE' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'SCAN' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'FILTER' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'PLUS' (explicit left 9991):   shift 67
    action 'MINUS' (explicit left 9991):   shift 68
    action 'LESS' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'INT' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'CHAR' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'BOOL' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'IF' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'THEN' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'ELSE' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'LET' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'IN' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'EOF' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'ID' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'STRINGLIT' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'CHARLIT' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'NUM' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action 'error' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action '#' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
    action '$$' (explicit right 9994):   reduce FunArg --> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' Exp
  immediate action: <none>  gotos:state 67:  items:    Exp -> Exp 'PLUS' . Exp
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 36
state 68:  items:    Exp -> Exp 'MINUS' . Exp
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 37
state 69:  items:    Exp -> Exp 'DEQ' . Exp
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 38
state 70:  items:    Exp -> Exp 'LTH' . Exp
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 39
state 71:  items:    Exp -> Exp 'MUL' . Exp
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 40
state 72:  items:    Exp -> Exp 'DIV' . Exp
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 41
state 73:  items:    Exp -> 'NOT' . Exp
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 42
state 74:  items:    Exp -> 'NEG' . Exp
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 43
state 75:  items:    Exp -> Exp 'AND' . Exp
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 44
state 76:  items:    Exp -> Exp 'OR' . Exp
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 45
state 77:  items:    Exp -> 'IF' . Exp 'THEN' Exp 'ELSE' Exp
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 46
state 78:  items:    Exp -> 'IF' Exp 'THEN' . Exp 'ELSE' Exp
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 47
state 79:  items:    Exp -> 'IF' Exp 'THEN' Exp 'ELSE' . Exp
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 48
state 80:  items:    Exp -> 'ID' 'LPAR' . Exps 'RPAR'
    Exp -> 'ID' 'LPAR' . 'RPAR'
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   shift 83
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 64
    goto Exps: 81
state 81:  items:    Exp -> 'ID' 'LPAR' Exps . 'RPAR'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   shift 82
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 82:  items:    Exp -> 'ID' 'LPAR' Exps 'RPAR' . 
  actions:    action 'TRUE' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'FALSE' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'NEG' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'NOT' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'AND' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'OR' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'MUL' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'DIV' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'LPAR' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'RPAR' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'LBRACKET' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'RBRACKET' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'LCURLY' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'RCURLY' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'FUN' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'FN' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'COMMA' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'SEMICOLON' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'READ' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'WRITE' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'DEQ' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'LTH' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'EQ' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'MAP' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'REDUCE' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'IOTA' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'ARROW' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'REPLICATE' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'SCAN' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'FILTER' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'PLUS' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'MINUS' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'LESS' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'INT' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'CHAR' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'BOOL' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'IF' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'THEN' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'ELSE' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'LET' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'IN' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'EOF' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'ID' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'STRINGLIT' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'CHARLIT' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'NUM' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action 'error' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action '#' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
    action '$$' (noprec):   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'
  immediate action:   reduce Exp --> 'ID' 'LPAR' Exps 'RPAR'  gotos:state 83:  items:    Exp -> 'ID' 'LPAR' 'RPAR' . 
  actions:    action 'TRUE' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'FALSE' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'NEG' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'NOT' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'AND' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'OR' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'MUL' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'DIV' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'LPAR' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'RPAR' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'LBRACKET' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'RBRACKET' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'LCURLY' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'RCURLY' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'FUN' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'FN' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'COMMA' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'SEMICOLON' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'READ' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'WRITE' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'DEQ' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'LTH' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'EQ' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'MAP' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'REDUCE' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'IOTA' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'ARROW' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'REPLICATE' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'SCAN' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'FILTER' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'PLUS' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'MINUS' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'LESS' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'INT' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'CHAR' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'BOOL' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'IF' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'THEN' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'ELSE' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'LET' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'IN' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'EOF' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'ID' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'STRINGLIT' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'CHARLIT' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'NUM' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action 'error' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action '#' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
    action '$$' (noprec):   reduce Exp --> 'ID' 'LPAR' 'RPAR'
  immediate action:   reduce Exp --> 'ID' 'LPAR' 'RPAR'  gotos:state 84:  items:    Exp -> 'READ' . 'LPAR' Type 'RPAR'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 85
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 85:  items:    Exp -> 'READ' 'LPAR' . Type 'RPAR'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (explicit left 9998):   shift 20
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   shift 17
    action 'CHAR' (noprec):   shift 18
    action 'BOOL' (noprec):   shift 19
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Type: 86
state 86:  items:    Exp -> 'READ' 'LPAR' Type . 'RPAR'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   shift 87
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 87:  items:    Exp -> 'READ' 'LPAR' Type 'RPAR' . 
  actions:    action 'TRUE' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'FALSE' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'NEG' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'NOT' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'AND' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'OR' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'MUL' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'DIV' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'LPAR' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'RPAR' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'LBRACKET' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'RBRACKET' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'LCURLY' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'RCURLY' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'FUN' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'FN' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'COMMA' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'SEMICOLON' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'READ' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'WRITE' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'DEQ' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'LTH' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'EQ' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'MAP' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'REDUCE' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'IOTA' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'ARROW' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'REPLICATE' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'SCAN' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'FILTER' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'PLUS' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'MINUS' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'LESS' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'INT' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'CHAR' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'BOOL' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'IF' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'THEN' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'ELSE' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'LET' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'IN' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'EOF' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'ID' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'STRINGLIT' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'CHARLIT' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'NUM' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action 'error' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action '#' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
    action '$$' (noprec):   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'
  immediate action:   reduce Exp --> 'READ' 'LPAR' Type 'RPAR'  gotos:state 88:  items:    Exp -> 'WRITE' . 'LPAR' Exp 'RPAR'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 89
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 89:  items:    Exp -> 'WRITE' 'LPAR' . Exp 'RPAR'
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 49
state 90:  items:    Exp -> 'WRITE' 'LPAR' Exp 'RPAR' . 
  actions:    action 'TRUE' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'FALSE' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'NEG' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'NOT' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'AND' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'OR' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'MUL' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'DIV' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'LPAR' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'RPAR' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'LBRACKET' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'RBRACKET' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'LCURLY' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'RCURLY' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'FUN' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'FN' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'COMMA' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'SEMICOLON' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'READ' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'WRITE' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'DEQ' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'LTH' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'EQ' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'MAP' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'REDUCE' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'IOTA' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'ARROW' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'REPLICATE' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'SCAN' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'FILTER' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'PLUS' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'MINUS' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'LESS' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'INT' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'CHAR' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'BOOL' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'IF' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'THEN' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'ELSE' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'LET' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'IN' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'EOF' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'ID' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'STRINGLIT' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'CHARLIT' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'NUM' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action 'error' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action '#' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
    action '$$' (noprec):   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'
  immediate action:   reduce Exp --> 'WRITE' 'LPAR' Exp 'RPAR'  gotos:state 91:  items:    Exp -> 'IOTA' . 'LPAR' Exp 'RPAR'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 92
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 92:  items:    Exp -> 'IOTA' 'LPAR' . Exp 'RPAR'
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 50
state 93:  items:    Exp -> 'IOTA' 'LPAR' Exp 'RPAR' . 
  actions:    action 'TRUE' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'FALSE' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'NEG' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'NOT' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'AND' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'OR' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'MUL' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'DIV' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'LPAR' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'RPAR' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'LBRACKET' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'RBRACKET' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'LCURLY' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'RCURLY' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'FUN' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'FN' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'COMMA' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'SEMICOLON' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'READ' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'WRITE' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'DEQ' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'LTH' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'EQ' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'MAP' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'REDUCE' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'IOTA' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'ARROW' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'REPLICATE' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'SCAN' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'FILTER' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'PLUS' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'MINUS' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'LESS' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'INT' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'CHAR' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'BOOL' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'IF' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'THEN' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'ELSE' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'LET' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'IN' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'EOF' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'ID' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'STRINGLIT' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'CHARLIT' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'NUM' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action 'error' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action '#' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
    action '$$' (noprec):   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'
  immediate action:   reduce Exp --> 'IOTA' 'LPAR' Exp 'RPAR'  gotos:state 94:  items:    Exp -> 'REPLICATE' . 'LPAR' Exp 'COMMA' Exp 'RPAR'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 95
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 95:  items:    Exp -> 'REPLICATE' 'LPAR' . Exp 'COMMA' Exp 'RPAR'
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 51
state 96:  items:    Exp -> 'REPLICATE' 'LPAR' Exp 'COMMA' . Exp 'RPAR'
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 52
state 97:  items:    Exp -> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR' . 
  actions:    action 'TRUE' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'FALSE' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'NEG' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'NOT' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'AND' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'OR' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'MUL' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'DIV' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'LPAR' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'RPAR' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'LBRACKET' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'RBRACKET' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'LCURLY' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'RCURLY' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'FUN' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'FN' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'COMMA' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'SEMICOLON' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'READ' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'WRITE' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'DEQ' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'LTH' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'EQ' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'MAP' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'REDUCE' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'IOTA' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'ARROW' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'REPLICATE' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'SCAN' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'FILTER' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'PLUS' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'MINUS' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'LESS' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'INT' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'CHAR' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'BOOL' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'IF' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'THEN' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'ELSE' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'LET' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'IN' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'EOF' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'ID' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'STRINGLIT' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'CHARLIT' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'NUM' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action 'error' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action '#' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
    action '$$' (noprec):   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'
  immediate action:   reduce Exp --> 'REPLICATE' 'LPAR' Exp 'COMMA' Exp 'RPAR'  gotos:state 98:  items:    Exp -> 'MAP' . 'LPAR' FunArg 'COMMA' Exp 'RPAR'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 99
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 99:  items:    Exp -> 'MAP' 'LPAR' . FunArg 'COMMA' Exp 'RPAR'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   shift 136
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 135
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto FunArg: 100
state 100:  items:    Exp -> 'MAP' 'LPAR' FunArg . 'COMMA' Exp 'RPAR'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (explicit left 9995):   shift 101
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 101:  items:    Exp -> 'MAP' 'LPAR' FunArg 'COMMA' . Exp 'RPAR'
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 53
state 102:  items:    Exp -> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR' . 
  actions:    action 'TRUE' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'FALSE' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'NEG' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'NOT' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'AND' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'OR' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'MUL' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'DIV' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'LPAR' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'RPAR' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'LBRACKET' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'RBRACKET' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'LCURLY' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'RCURLY' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'FUN' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'FN' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'COMMA' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'SEMICOLON' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'READ' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'WRITE' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'DEQ' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'LTH' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'EQ' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'MAP' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'REDUCE' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'IOTA' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'ARROW' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'REPLICATE' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'SCAN' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'FILTER' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'PLUS' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'MINUS' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'LESS' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'INT' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'CHAR' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'BOOL' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'IF' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'THEN' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'ELSE' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'LET' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'IN' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'EOF' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'ID' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'STRINGLIT' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'CHARLIT' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'NUM' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'error' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action '#' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action '$$' (noprec):   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
  immediate action:   reduce Exp --> 'MAP' 'LPAR' FunArg 'COMMA' Exp 'RPAR'  gotos:state 103:  items:    Exp -> 'REDUCE' . 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 104
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 104:  items:    Exp -> 'REDUCE' 'LPAR' . FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   shift 136
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 135
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto FunArg: 105
state 105:  items:    Exp -> 'REDUCE' 'LPAR' FunArg . 'COMMA' Exp 'COMMA' Exp 'RPAR'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (explicit left 9995):   shift 106
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 106:  items:    Exp -> 'REDUCE' 'LPAR' FunArg 'COMMA' . Exp 'COMMA' Exp 'RPAR'
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 54
state 107:  items:    Exp -> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' . Exp 'RPAR'
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 55
state 108:  items:    Exp -> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR' . 
  actions:    action 'TRUE' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'FALSE' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'NEG' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'NOT' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'AND' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'OR' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'MUL' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'DIV' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'LPAR' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'RPAR' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'LBRACKET' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'RBRACKET' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'LCURLY' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'RCURLY' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'FUN' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'FN' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'COMMA' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'SEMICOLON' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'READ' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'WRITE' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'DEQ' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'LTH' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'EQ' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'MAP' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'REDUCE' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'IOTA' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'ARROW' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'REPLICATE' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'SCAN' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'FILTER' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'PLUS' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'MINUS' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'LESS' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'INT' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'CHAR' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'BOOL' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'IF' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'THEN' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'ELSE' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'LET' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'IN' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'EOF' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'ID' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'STRINGLIT' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'CHARLIT' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'NUM' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'error' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action '#' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action '$$' (noprec):   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
  immediate action:   reduce Exp --> 'REDUCE' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'  gotos:state 109:  items:    Exp -> 'LPAR' . Exp 'RPAR'
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 56
state 110:  items:    Exp -> 'LPAR' Exp 'RPAR' . 
  actions:    action 'TRUE' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'FALSE' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'NEG' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'NOT' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'AND' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'OR' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'MUL' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'DIV' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'LPAR' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'RPAR' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'LBRACKET' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'RBRACKET' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'LCURLY' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'RCURLY' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'FUN' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'FN' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'COMMA' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'SEMICOLON' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'READ' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'WRITE' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'DEQ' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'LTH' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'EQ' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'MAP' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'REDUCE' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'IOTA' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'ARROW' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'REPLICATE' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'SCAN' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'FILTER' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'PLUS' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'MINUS' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'LESS' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'INT' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'CHAR' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'BOOL' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'IF' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'THEN' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'ELSE' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'LET' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'IN' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'EOF' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'ID' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'STRINGLIT' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'CHARLIT' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'NUM' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action 'error' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action '#' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
    action '$$' (noprec):   reduce Exp --> 'LPAR' Exp 'RPAR'
  immediate action:   reduce Exp --> 'LPAR' Exp 'RPAR'  gotos:state 111:  items:    Exp -> 'SCAN' . 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 112
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 112:  items:    Exp -> 'SCAN' 'LPAR' . FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   shift 136
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 135
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto FunArg: 113
state 113:  items:    Exp -> 'SCAN' 'LPAR' FunArg . 'COMMA' Exp 'COMMA' Exp 'RPAR'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (explicit left 9995):   shift 114
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 114:  items:    Exp -> 'SCAN' 'LPAR' FunArg 'COMMA' . Exp 'COMMA' Exp 'RPAR'
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 57
state 115:  items:    Exp -> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' . Exp 'RPAR'
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 58
state 116:  items:    Exp -> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR' . 
  actions:    action 'TRUE' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'FALSE' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'NEG' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'NOT' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'AND' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'OR' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'MUL' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'DIV' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'LPAR' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'RPAR' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'LBRACKET' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'RBRACKET' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'LCURLY' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'RCURLY' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'FUN' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'FN' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'COMMA' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'SEMICOLON' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'READ' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'WRITE' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'DEQ' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'LTH' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'EQ' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'MAP' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'REDUCE' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'IOTA' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'ARROW' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'REPLICATE' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'SCAN' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'FILTER' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'PLUS' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'MINUS' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'LESS' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'INT' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'CHAR' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'BOOL' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'IF' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'THEN' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'ELSE' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'LET' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'IN' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'EOF' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'ID' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'STRINGLIT' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'CHARLIT' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'NUM' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action 'error' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action '#' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
    action '$$' (noprec):   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'
  immediate action:   reduce Exp --> 'SCAN' 'LPAR' FunArg 'COMMA' Exp 'COMMA' Exp 'RPAR'  gotos:state 117:  items:    Exp -> 'FILTER' . 'LPAR' FunArg 'COMMA' Exp 'RPAR'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 118
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 118:  items:    Exp -> 'FILTER' 'LPAR' . FunArg 'COMMA' Exp 'RPAR'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   shift 136
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 135
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto FunArg: 119
state 119:  items:    Exp -> 'FILTER' 'LPAR' FunArg . 'COMMA' Exp 'RPAR'
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (explicit left 9995):   shift 120
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 120:  items:    Exp -> 'FILTER' 'LPAR' FunArg 'COMMA' . Exp 'RPAR'
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 59
state 121:  items:    Exp -> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR' . 
  actions:    action 'TRUE' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'FALSE' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'NEG' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'NOT' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'AND' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'OR' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'MUL' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'DIV' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'LPAR' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'RPAR' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'LBRACKET' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'RBRACKET' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'LCURLY' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'RCURLY' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'FUN' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'FN' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'COMMA' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'SEMICOLON' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'READ' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'WRITE' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'DEQ' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'LTH' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'EQ' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'MAP' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'REDUCE' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'IOTA' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'ARROW' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'REPLICATE' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'SCAN' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'FILTER' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'PLUS' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'MINUS' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'LESS' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'INT' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'CHAR' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'BOOL' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'IF' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'THEN' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'ELSE' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'LET' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'IN' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'EOF' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'ID' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'STRINGLIT' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'CHARLIT' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'NUM' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action 'error' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action '#' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
    action '$$' (noprec):   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'
  immediate action:   reduce Exp --> 'FILTER' 'LPAR' FunArg 'COMMA' Exp 'RPAR'  gotos:state 122:  items:    Exp -> 'LET' . 'ID' 'EQ' Exp Lets
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 123
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 123:  items:    Exp -> 'LET' 'ID' . 'EQ' Exp Lets
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (explicit left 9990):   shift 124
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 124:  items:    Exp -> 'LET' 'ID' 'EQ' . Exp Lets
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 60
state 125:  items:    Exp -> 'LET' 'ID' 'EQ' Exp Lets . 
  actions:    action 'TRUE' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'FALSE' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'NEG' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'NOT' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'AND' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'OR' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'MUL' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'DIV' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'LPAR' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'RPAR' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'LBRACKET' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'RBRACKET' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'LCURLY' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'RCURLY' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'FUN' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'FN' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'COMMA' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'SEMICOLON' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'READ' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'WRITE' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'DEQ' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'LTH' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'EQ' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'MAP' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'REDUCE' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'IOTA' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'ARROW' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'REPLICATE' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'SCAN' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'FILTER' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'PLUS' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'MINUS' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'LESS' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'INT' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'CHAR' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'BOOL' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'IF' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'THEN' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'ELSE' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'LET' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'IN' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'EOF' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'ID' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'STRINGLIT' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'CHARLIT' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'NUM' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action 'error' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action '#' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
    action '$$' (explicit nonassoc 9985):   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets
  immediate action:   reduce Exp --> 'LET' 'ID' 'EQ' Exp Lets  gotos:state 126:  items:    Exp -> 'ID' 'LBRACKET' . Exp 'RBRACKET'
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 61
state 127:  items:    Exp -> 'ID' 'LBRACKET' Exp 'RBRACKET' . 
  actions:    action 'TRUE' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'FALSE' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'NEG' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'NOT' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'AND' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'OR' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'MUL' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'DIV' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'LPAR' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'RPAR' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'LBRACKET' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'RBRACKET' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'LCURLY' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'RCURLY' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'FUN' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'FN' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'COMMA' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'SEMICOLON' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'READ' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'WRITE' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'DEQ' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'LTH' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'EQ' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'MAP' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'REDUCE' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'IOTA' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'ARROW' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'REPLICATE' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'SCAN' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'FILTER' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'PLUS' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'MINUS' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'LESS' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'INT' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'CHAR' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'BOOL' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'IF' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'THEN' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'ELSE' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'LET' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'IN' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'EOF' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'ID' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'STRINGLIT' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'CHARLIT' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'NUM' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action 'error' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action '#' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
    action '$$' (explicit left 9998):   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'
  immediate action:   reduce Exp --> 'ID' 'LBRACKET' Exp 'RBRACKET'  gotos:state 128:  items:    Lets -> 'SEMICOLON' . 'ID' 'EQ' Exp Lets
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 129
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 129:  items:    Lets -> 'SEMICOLON' 'ID' . 'EQ' Exp Lets
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (explicit left 9990):   shift 130
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 130:  items:    Lets -> 'SEMICOLON' 'ID' 'EQ' . Exp Lets
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 62
state 131:  items:    Lets -> 'SEMICOLON' 'ID' 'EQ' Exp Lets . 
  actions:    action 'TRUE' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'FALSE' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'NEG' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'NOT' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'AND' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'OR' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'MUL' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'DIV' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'LPAR' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'RPAR' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'LBRACKET' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'RBRACKET' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'LCURLY' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'RCURLY' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'FUN' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'FN' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'COMMA' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'SEMICOLON' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'READ' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'WRITE' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'DEQ' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'LTH' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'EQ' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'MAP' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'REDUCE' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'IOTA' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'ARROW' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'REPLICATE' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'SCAN' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'FILTER' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'PLUS' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'MINUS' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'LESS' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'INT' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'CHAR' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'BOOL' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'IF' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'THEN' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'ELSE' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'LET' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'IN' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'EOF' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'ID' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'STRINGLIT' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'CHARLIT' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'NUM' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action 'error' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action '#' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
    action '$$' (explicit left 9990):   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets
  immediate action:   reduce Lets --> 'SEMICOLON' 'ID' 'EQ' Exp Lets  gotos:state 132:  items:    Lets -> 'IN' . Exp
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 63
state 133:  items:    Exps -> Exp 'COMMA' . Exps
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 64
    goto Exps: 134
state 134:  items:    Exps -> Exp 'COMMA' Exps . 
  actions:    action 'TRUE' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'FALSE' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'NEG' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'NOT' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'AND' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'OR' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'MUL' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'DIV' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'LPAR' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'RPAR' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'LBRACKET' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'RBRACKET' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'LCURLY' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'RCURLY' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'FUN' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'FN' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'COMMA' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'SEMICOLON' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'READ' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'WRITE' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'DEQ' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'LTH' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'EQ' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'MAP' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'REDUCE' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'IOTA' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'ARROW' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'REPLICATE' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'SCAN' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'FILTER' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'PLUS' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'MINUS' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'LESS' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'INT' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'CHAR' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'BOOL' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'IF' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'THEN' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'ELSE' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'LET' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'IN' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'EOF' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'ID' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'STRINGLIT' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'CHARLIT' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'NUM' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action 'error' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action '#' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
    action '$$' (explicit left 9995):   reduce Exps --> Exp 'COMMA' Exps
  immediate action:   reduce Exps --> Exp 'COMMA' Exps  gotos:state 135:  items:    FunArg -> 'ID' . 
  actions:    action 'TRUE' (noprec):   reduce FunArg --> 'ID'
    action 'FALSE' (noprec):   reduce FunArg --> 'ID'
    action 'NEG' (noprec):   reduce FunArg --> 'ID'
    action 'NOT' (noprec):   reduce FunArg --> 'ID'
    action 'AND' (noprec):   reduce FunArg --> 'ID'
    action 'OR' (noprec):   reduce FunArg --> 'ID'
    action 'MUL' (noprec):   reduce FunArg --> 'ID'
    action 'DIV' (noprec):   reduce FunArg --> 'ID'
    action 'LPAR' (noprec):   reduce FunArg --> 'ID'
    action 'RPAR' (noprec):   reduce FunArg --> 'ID'
    action 'LBRACKET' (noprec):   reduce FunArg --> 'ID'
    action 'RBRACKET' (noprec):   reduce FunArg --> 'ID'
    action 'LCURLY' (noprec):   reduce FunArg --> 'ID'
    action 'RCURLY' (noprec):   reduce FunArg --> 'ID'
    action 'FUN' (noprec):   reduce FunArg --> 'ID'
    action 'FN' (noprec):   reduce FunArg --> 'ID'
    action 'COMMA' (noprec):   reduce FunArg --> 'ID'
    action 'SEMICOLON' (noprec):   reduce FunArg --> 'ID'
    action 'READ' (noprec):   reduce FunArg --> 'ID'
    action 'WRITE' (noprec):   reduce FunArg --> 'ID'
    action 'DEQ' (noprec):   reduce FunArg --> 'ID'
    action 'LTH' (noprec):   reduce FunArg --> 'ID'
    action 'EQ' (noprec):   reduce FunArg --> 'ID'
    action 'MAP' (noprec):   reduce FunArg --> 'ID'
    action 'REDUCE' (noprec):   reduce FunArg --> 'ID'
    action 'IOTA' (noprec):   reduce FunArg --> 'ID'
    action 'ARROW' (noprec):   reduce FunArg --> 'ID'
    action 'REPLICATE' (noprec):   reduce FunArg --> 'ID'
    action 'SCAN' (noprec):   reduce FunArg --> 'ID'
    action 'FILTER' (noprec):   reduce FunArg --> 'ID'
    action 'PLUS' (noprec):   reduce FunArg --> 'ID'
    action 'MINUS' (noprec):   reduce FunArg --> 'ID'
    action 'LESS' (noprec):   reduce FunArg --> 'ID'
    action 'INT' (noprec):   reduce FunArg --> 'ID'
    action 'CHAR' (noprec):   reduce FunArg --> 'ID'
    action 'BOOL' (noprec):   reduce FunArg --> 'ID'
    action 'IF' (noprec):   reduce FunArg --> 'ID'
    action 'THEN' (noprec):   reduce FunArg --> 'ID'
    action 'ELSE' (noprec):   reduce FunArg --> 'ID'
    action 'LET' (noprec):   reduce FunArg --> 'ID'
    action 'IN' (noprec):   reduce FunArg --> 'ID'
    action 'EOF' (noprec):   reduce FunArg --> 'ID'
    action 'ID' (noprec):   reduce FunArg --> 'ID'
    action 'STRINGLIT' (noprec):   reduce FunArg --> 'ID'
    action 'CHARLIT' (noprec):   reduce FunArg --> 'ID'
    action 'NUM' (noprec):   reduce FunArg --> 'ID'
    action 'error' (noprec):   reduce FunArg --> 'ID'
    action '#' (noprec):   reduce FunArg --> 'ID'
    action '$$' (noprec):   reduce FunArg --> 'ID'
  immediate action:   reduce FunArg --> 'ID'  gotos:state 136:  items:    FunArg -> 'FN' . Type 'LPAR' 'RPAR' 'ARROW' Exp
    FunArg -> 'FN' . Type 'LPAR' Params 'RPAR' 'ARROW' Exp
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (explicit left 9998):   shift 20
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   shift 17
    action 'CHAR' (noprec):   shift 18
    action 'BOOL' (noprec):   shift 19
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Type: 137
state 137:  items:    FunArg -> 'FN' Type . 'LPAR' 'RPAR' 'ARROW' Exp
    FunArg -> 'FN' Type . 'LPAR' Params 'RPAR' 'ARROW' Exp
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 138
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 138:  items:    FunArg -> 'FN' Type 'LPAR' . 'RPAR' 'ARROW' Exp
    FunArg -> 'FN' Type 'LPAR' . Params 'RPAR' 'ARROW' Exp
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   shift 139
    action 'LBRACKET' (explicit left 9998):   shift 20
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   shift 17
    action 'CHAR' (noprec):   shift 18
    action 'BOOL' (noprec):   shift 19
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Type: 23
    goto Params: 141
state 139:  items:    FunArg -> 'FN' Type 'LPAR' 'RPAR' . 'ARROW' Exp
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (explicit right 9994):   shift 140
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 140:  items:    FunArg -> 'FN' Type 'LPAR' 'RPAR' 'ARROW' . Exp
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 65
state 141:  items:    FunArg -> 'FN' Type 'LPAR' Params . 'RPAR' 'ARROW' Exp
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   shift 142
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 142:  items:    FunArg -> 'FN' Type 'LPAR' Params 'RPAR' . 'ARROW' Exp
  actions:    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'NEG' (noprec):   error
    action 'NOT' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   error
    action 'WRITE' (noprec):   error
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (noprec):   error
    action 'REDUCE' (noprec):   error
    action 'IOTA' (noprec):   error
    action 'ARROW' (explicit right 9994):   shift 143
    action 'REPLICATE' (noprec):   error
    action 'SCAN' (noprec):   error
    action 'FILTER' (noprec):   error
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (noprec):   error
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (noprec):   error
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   error
    action 'STRINGLIT' (noprec):   error
    action 'CHARLIT' (noprec):   error
    action 'NUM' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 143:  items:    FunArg -> 'FN' Type 'LPAR' Params 'RPAR' 'ARROW' . Exp
  actions:    action 'TRUE' (noprec):   shift 29
    action 'FALSE' (noprec):   shift 28
    action 'NEG' (explicit right 9992):   shift 74
    action 'NOT' (explicit left 9987):   shift 73
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'MUL' (noprec):   error
    action 'DIV' (noprec):   error
    action 'LPAR' (noprec):   shift 109
    action 'RPAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'LCURLY' (explicit left 9999):   shift 33
    action 'RCURLY' (noprec):   error
    action 'FUN' (noprec):   error
    action 'FN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'SEMICOLON' (noprec):   error
    action 'READ' (noprec):   shift 84
    action 'WRITE' (noprec):   shift 88
    action 'DEQ' (noprec):   error
    action 'LTH' (noprec):   error
    action 'EQ' (noprec):   error
    action 'MAP' (explicit left 9997):   shift 98
    action 'REDUCE' (explicit left 9997):   shift 103
    action 'IOTA' (explicit left 9997):   shift 91
    action 'ARROW' (noprec):   error
    action 'REPLICATE' (explicit left 9997):   shift 94
    action 'SCAN' (explicit left 9997):   shift 111
    action 'FILTER' (explicit left 9997):   shift 117
    action 'PLUS' (noprec):   error
    action 'MINUS' (noprec):   error
    action 'LESS' (noprec):   error
    action 'INT' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'BOOL' (noprec):   error
    action 'IF' (explicit left 9988):   shift 77
    action 'THEN' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'LET' (explicit left 9989):   shift 122
    action 'IN' (noprec):   error
    action 'EOF' (noprec):   error
    action 'ID' (noprec):   shift 31
    action 'STRINGLIT' (noprec):   shift 32
    action 'CHARLIT' (noprec):   shift 30
    action 'NUM' (noprec):   shift 27
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto Exp: 66

startStates = 0
------------------------
